<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="net.corda.samples.negotiation.UpdateFlowTests" tests="1" skipped="0" failures="1" errors="0" timestamp="2021-03-15T21:44:53" hostname="DESKTOP-GCG8F06" time="23.907">
  <properties/>
  <testcase name="test update flow" classname="net.corda.samples.negotiation.UpdateFlowTests" time="23.907">
    <failure message="java.util.concurrent.ExecutionException: net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored" type="java.util.concurrent.ExecutionException">java.util.concurrent.ExecutionException: net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)
	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1908)
	at net.corda.core.internal.concurrent.CordaFutureImpl.get(CordaFutureImpl.kt)
	at net.corda.samples.negotiation.FlowTestsBaseV2.nodeBUpdate(FlowTestsBaseV2.kt:75)
	at net.corda.samples.negotiation.UpdateFlowTests.testUpdate(UpdateFlowTests.kt:27)
	at net.corda.samples.negotiation.UpdateFlowTests.test update flow(UpdateFlowTests.kt:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:748)
Caused by: net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.()
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244)
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225)
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574)
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67)
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71)
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351)
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199)
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417)
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:414)
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177)
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67)
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417)
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:414)
	at net.corda.samples.negotiation.flows.UpdateFlow$Initiator.call(UpdateFlow.kt:52)
	at net.corda.samples.negotiation.flows.UpdateFlow$Initiator.call(UpdateFlow.kt:19)
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346)
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71)
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092)
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788)
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100)
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63)
</failure>
  </testcase>
  <system-out><![CDATA[[INFO ] 22:44:56.067 [Test worker] TestCordappImpl. - Generating CorDapp jar from local project in C:\Users\Jonny\Desktop\corda\samples-kotlin\Advanced\negotiation-cordapp\workflows ...
[INFO ] 22:44:56.251 [Connection worker] TestCordappImpl. - Build
[INFO ] 22:44:57.696 [Connection worker] TestCordappImpl. - Starting Gradle Daemon
[INFO ] 22:44:59.181 [Connection worker] TestCordappImpl. - Connecting to Gradle Daemon
[INFO ] 22:44:59.190 [Connection worker] TestCordappImpl. - Starting Gradle Daemon
[INFO ] 22:44:59.191 [Connection worker] TestCordappImpl. - Build
[INFO ] 22:44:59.593 [Connection worker] TestCordappImpl. - Run build
[INFO ] 22:44:59.614 [Connection worker] TestCordappImpl. - Evaluate settings
[INFO ] 22:44:59.935 [Connection worker] TestCordappImpl. - Run build
[INFO ] 22:44:59.946 [Connection worker] TestCordappImpl. - Configure build
[INFO ] 22:44:59.946 [Connection worker] TestCordappImpl. - Load projects
[INFO ] 22:45:00.067 [Connection worker] TestCordappImpl. - Configure build
[INFO ] 22:45:00.067 [Connection worker] TestCordappImpl. - Configure project :
[INFO ] 22:45:00.471 [Connection worker] TestCordappImpl. - Resolve dependencies of :classpath
[INFO ] 22:45:00.914 [Connection worker] TestCordappImpl. - Configure project :
[INFO ] 22:45:00.914 [Connection worker] TestCordappImpl. - Resolve files of :classpath
[INFO ] 22:45:00.936 [Connection worker] TestCordappImpl. - Configure project :
[INFO ] 22:45:00.936 [Connection worker] TestCordappImpl. - Resolve files of :classpath
[INFO ] 22:45:00.936 [Connection worker] TestCordappImpl. - Configure project :
[INFO ] 22:45:01.628 [Connection worker] TestCordappImpl. - Configure build
[INFO ] 22:45:01.628 [Connection worker] TestCordappImpl. - Configure project :contracts
[INFO ] 22:45:01.661 [Connection worker] TestCordappImpl. - Configure build
[INFO ] 22:45:01.661 [Connection worker] TestCordappImpl. - Configure project :workflows
[INFO ] 22:45:01.683 [Connection worker] TestCordappImpl. - Configure build
[INFO ] 22:45:01.683 [Connection worker] TestCordappImpl. - Run build
[INFO ] 22:45:01.825 [Connection worker] TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath
[INFO ] 22:45:01.835 [Connection worker] TestCordappImpl. - Run build
[INFO ] 22:45:01.835 [Connection worker] TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath
[INFO ] 22:45:01.835 [Connection worker] TestCordappImpl. - Run build
[INFO ] 22:45:01.846 [Connection worker] TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath
[INFO ] 22:45:01.846 [Connection worker] TestCordappImpl. - Run build
[INFO ] 22:45:01.846 [Connection worker] TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath
[INFO ] 22:45:01.846 [Connection worker] TestCordappImpl. - Run build
[INFO ] 22:45:01.857 [Connection worker] TestCordappImpl. - Run tasks
[INFO ] 22:45:01.879 [Connection worker] TestCordappImpl. - Task :contracts:compileKotlin
[INFO ] 22:45:01.890 [Connection worker] TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath
[INFO ] 22:45:01.890 [Connection worker] TestCordappImpl. - Task :contracts:compileKotlin
[INFO ] 22:45:01.934 [Connection worker] TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath
[INFO ] 22:45:01.934 [Connection worker] TestCordappImpl. - Task :contracts:compileKotlin
[INFO ] 22:45:01.934 [Connection worker] TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath
[INFO ] 22:45:01.934 [Connection worker] TestCordappImpl. - Task :contracts:compileKotlin
[INFO ] 22:45:01.945 [Connection worker] TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath
[INFO ] 22:45:01.989 [Connection worker] TestCordappImpl. - Task :contracts:compileKotlin
[INFO ] 22:45:01.989 [Connection worker] TestCordappImpl. - Resolve files of :contracts:compileClasspath
[INFO ] 22:45:02.000 [Connection worker] TestCordappImpl. - Task :contracts:compileKotlin
[INFO ] 22:45:02.302 [Connection worker] TestCordappImpl. - Resolve files of :contracts:compileClasspath
[INFO ] 22:45:02.302 [Connection worker] TestCordappImpl. - Task :contracts:compileKotlin
[INFO ] 22:45:02.313 [Connection worker] TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath
[INFO ] 22:45:02.313 [Connection worker] TestCordappImpl. - Task :contracts:compileKotlin
[INFO ] 22:45:02.324 [Connection worker] TestCordappImpl. - Run tasks
[INFO ] 22:45:02.324 [Connection worker] TestCordappImpl. - Task :contracts:compileJava
[INFO ] 22:45:02.335 [Connection worker] TestCordappImpl. - Run tasks
[INFO ] 22:45:02.335 [Connection worker] TestCordappImpl. - Task :contracts:processResources
[INFO ] 22:45:02.335 [Connection worker] TestCordappImpl. - Run tasks
[INFO ] 22:45:02.335 [Connection worker] TestCordappImpl. - Task :contracts:classes
[INFO ] 22:45:02.335 [Connection worker] TestCordappImpl. - Run tasks
[INFO ] 22:45:02.335 [Connection worker] TestCordappImpl. - Task :contracts:configureCordappFatJar
[INFO ] 22:45:02.335 [Connection worker] TestCordappImpl. - Resolve dependencies of :contracts:runtime
[INFO ] 22:45:02.368 [Connection worker] TestCordappImpl. - Task :contracts:configureCordappFatJar
[INFO ] 22:45:02.368 [Connection worker] TestCordappImpl. - Resolve files of :contracts:runtime
[INFO ] 22:45:02.368 [Connection worker] TestCordappImpl. - Task :contracts:configureCordappFatJar
[INFO ] 22:45:02.368 [Connection worker] TestCordappImpl. - Run tasks
[INFO ] 22:45:02.379 [Connection worker] TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC
[INFO ] 22:45:02.379 [Connection worker] TestCordappImpl. - Run tasks
[INFO ] 22:45:02.379 [Connection worker] TestCordappImpl. - Task :contracts:jar
[INFO ] 22:45:02.390 [Connection worker] TestCordappImpl. - Run tasks
[INFO ] 22:45:02.390 [Connection worker] TestCordappImpl. - Task :workflows:compileKotlin
[INFO ] 22:45:02.390 [Connection worker] TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath
[INFO ] 22:45:02.390 [Connection worker] TestCordappImpl. - Task :workflows:compileKotlin
[INFO ] 22:45:02.401 [Connection worker] TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath
[INFO ] 22:45:02.401 [Connection worker] TestCordappImpl. - Task :workflows:compileKotlin
[INFO ] 22:45:02.401 [Connection worker] TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath
[INFO ] 22:45:02.401 [Connection worker] TestCordappImpl. - Task :workflows:compileKotlin
[INFO ] 22:45:02.401 [Connection worker] TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath
[INFO ] 22:45:02.477 [Connection worker] TestCordappImpl. - Task :workflows:compileKotlin
[INFO ] 22:45:02.477 [Connection worker] TestCordappImpl. - Resolve files of :workflows:compileClasspath
[INFO ] 22:45:02.488 [Connection worker] TestCordappImpl. - Task :workflows:compileKotlin
[INFO ] 22:45:02.488 [Connection worker] TestCordappImpl. - Resolve files of :workflows:compileClasspath
[INFO ] 22:45:02.488 [Connection worker] TestCordappImpl. - Task :workflows:compileKotlin
[INFO ] 22:45:02.510 [Connection worker] TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath
[INFO ] 22:45:02.510 [Connection worker] TestCordappImpl. - Task :workflows:compileKotlin
[INFO ] 22:45:02.510 [Connection worker] TestCordappImpl. - Run tasks
[INFO ] 22:45:02.510 [Connection worker] TestCordappImpl. - Task :workflows:compileJava
[INFO ] 22:45:02.510 [Connection worker] TestCordappImpl. - Run tasks
[INFO ] 22:45:02.510 [Connection worker] TestCordappImpl. - Task :workflows:processResources
[INFO ] 22:45:02.510 [Connection worker] TestCordappImpl. - Run tasks
[INFO ] 22:45:02.521 [Connection worker] TestCordappImpl. - Task :workflows:classes
[INFO ] 22:45:02.521 [Connection worker] TestCordappImpl. - Run tasks
[INFO ] 22:45:02.521 [Connection worker] TestCordappImpl. - Task :workflows:configureCordappFatJar
[INFO ] 22:45:02.521 [Connection worker] TestCordappImpl. - Resolve dependencies of :workflows:runtime
[INFO ] 22:45:02.543 [Connection worker] TestCordappImpl. - Task :workflows:configureCordappFatJar
[INFO ] 22:45:02.543 [Connection worker] TestCordappImpl. - Resolve files of :workflows:runtime
[INFO ] 22:45:02.543 [Connection worker] TestCordappImpl. - Task :workflows:configureCordappFatJar
[INFO ] 22:45:02.543 [Connection worker] TestCordappImpl. - Resolve files of :workflows:runtime
[INFO ] 22:45:02.543 [Connection worker] TestCordappImpl. - Task :workflows:configureCordappFatJar
[INFO ] 22:45:02.543 [Connection worker] TestCordappImpl. - Resolve files of :workflows:runtime
[INFO ] 22:45:02.543 [Connection worker] TestCordappImpl. - Task :workflows:configureCordappFatJar
[INFO ] 22:45:02.543 [Connection worker] TestCordappImpl. - Resolve files of :workflows:runtime
[INFO ] 22:45:02.543 [Connection worker] TestCordappImpl. - Task :workflows:configureCordappFatJar
[INFO ] 22:45:02.543 [Connection worker] TestCordappImpl. - Resolve files of :workflows:runtime
[INFO ] 22:45:02.543 [Connection worker] TestCordappImpl. - Task :workflows:configureCordappFatJar
[INFO ] 22:45:02.543 [Connection worker] TestCordappImpl. - Resolve files of :workflows:runtime
[INFO ] 22:45:02.543 [Connection worker] TestCordappImpl. - Task :workflows:configureCordappFatJar
[INFO ] 22:45:02.543 [Connection worker] TestCordappImpl. - Resolve files of :workflows:runtime
[INFO ] 22:45:02.543 [Connection worker] TestCordappImpl. - Task :workflows:configureCordappFatJar
[INFO ] 22:45:02.543 [Connection worker] TestCordappImpl. - Run tasks
[INFO ] 22:45:02.543 [Connection worker] TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC
[INFO ] 22:45:02.554 [Connection worker] TestCordappImpl. - Run tasks
[INFO ] 22:45:02.554 [Connection worker] TestCordappImpl. - Task :workflows:jar
[INFO ] 22:45:02.565 [Connection worker] TestCordappImpl. - Run tasks
[INFO ] 22:45:02.576 [Connection worker] TestCordappImpl. - Run build
[INFO ] 22:45:02.576 [Connection worker] TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows'
[INFO ] 22:45:02.576 [Connection worker] TestCordappImpl. - Run build
[INFO ] 22:45:02.579 [Connection worker] TestCordappImpl. - Build
[INFO ] 22:45:02.588 [Connection worker] TestCordappImpl. - Deleting unused version-specific caches in C:\Users\Jonny\Desktop\corda\samples-kotlin\Advanced\negotiation-cordapp\.gradle
[INFO ] 22:45:02.588 [Connection worker] TestCordappImpl. - Build
[INFO ] 22:45:02.613 [Connection worker] TestCordappImpl. - 
[INFO ] 22:45:06.509 [Test worker] JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20210315-214455.174-489E42A2EAEC62B9\nodes\0\cordapps]
[INFO ] 22:45:06.515 [Test worker] JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Jonny/Desktop/corda/samples-kotlin/Advanced/negotiation-cordapp/workflows/build/mock-network/20210315-214455.174-489E42A2EAEC62B9/nodes/0/cordapps/contracts-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Jonny/Desktop/corda/samples-kotlin/Advanced/negotiation-cordapp/workflows/build/mock-network/20210315-214455.174-489E42A2EAEC62B9/nodes/0/cordapps/workflows-0.2.jar, rootPackageName=null)
[INFO ] 22:45:06.522 [Test worker] JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Jonny/Desktop/corda/samples-kotlin/Advanced/negotiation-cordapp/workflows/build/mock-network/20210315-214455.174-489E42A2EAEC62B9/nodes/0/cordapps/contracts-0.2.jar
[INFO ] 22:45:06.606 [Test worker] JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Jonny/Desktop/corda/samples-kotlin/Advanced/negotiation-cordapp/workflows/build/mock-network/20210315-214455.174-489E42A2EAEC62B9/nodes/0/cordapps/workflows-0.2.jar
[INFO ] 22:45:07.376 [Test worker] InternalMockNetwork$MockNode. - MessagingService active change to: false
[INFO ] 22:45:07.551 [Test worker] InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads
[INFO ] 22:45:07.591 [Test worker] InternalMockNetwork$MockNode. - Node starting up ...
[INFO ] 22:45:07.664 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.AddItineraryFlow$Initiator to initiate net.corda.samples.negotiation.flows.AddItineraryFlow$Responder (version 1)
[INFO ] 22:45:07.665 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.ArrivalFlow$Initiator to initiate net.corda.samples.negotiation.flows.ArrivalFlow$Responder (version 1)
[INFO ] 22:45:07.665 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.CompleteFlow$Initiator to initiate net.corda.samples.negotiation.flows.CompleteFlow$Responder (version 1)
[INFO ] 22:45:07.666 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.NoticeFlow$Initiator to initiate net.corda.samples.negotiation.flows.NoticeFlow$Responder (version 1)
[INFO ] 22:45:07.667 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.OrderFlow$Initiator to initiate net.corda.samples.negotiation.flows.OrderFlow$Responder (version 1)
[INFO ] 22:45:07.667 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.UpdateFlow$Initiator to initiate net.corda.samples.negotiation.flows.UpdateFlow$Responder (version 1)
[INFO ] 22:45:07.741 [Test worker] InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-03-15T21:44:55.116Z
      epoch=1
  }
[INFO ] 22:45:07.787 [Test worker] HikariDataSource. - HikariPool-1 - Starting...
[INFO ] 22:45:08.476 [Test worker] HikariDataSource. - HikariPool-1 - Start completed.
[INFO ] 22:45:10.610 [Test worker] JdbcExecutor. - SELECT MD5SUM FROM PUBLIC.DATABASECHANGELOG WHERE MD5SUM IS NOT NULL
[INFO ] 22:45:10.613 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:10.614 [Test worker] StandardChangeLogHistoryService. - Reading from PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:10.614 [Test worker] JdbcExecutor. - SELECT * FROM PUBLIC.DATABASECHANGELOG ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC
[INFO ] 22:45:10.620 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 22:45:10.620 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 22:45:10.676 [Test worker] ValidatingVisitor. - Skipping change set migration/node-notary.changelog-pkey.xml::non-clustered_pk-notary_state::R3.Corda due to validation error(s): clustered is not allowed on h2
[INFO ] 22:45:10.683 [Test worker] JdbcExecutor. - SELECT LOCKED FROM PUBLIC.DATABASECHANGELOGLOCK WHERE ID=1
[INFO ] 22:45:10.690 [Test worker] StandardLockService. - Successfully acquired change log lock
[INFO ] 22:45:10.695 [Test worker] ValidatingVisitor. - Skipping change set migration/node-notary.changelog-pkey.xml::non-clustered_pk-notary_state::R3.Corda due to validation error(s): clustered is not allowed on h2
[INFO ] 22:45:10.698 [Test worker] JdbcExecutor. - DROP TABLE PUBLIC.node_checkpoints
[INFO ] 22:45:10.706 [Test worker] ChangeSet. - Table node_checkpoints dropped
[INFO ] 22:45:10.706 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_checkpoints (flow_id NVARCHAR(64) NOT NULL, status INT NOT NULL, compatible BOOLEAN NOT NULL, progress_step NVARCHAR(256), flow_io_request NVARCHAR(128), timestamp TIMESTAMP NOT NULL)
[INFO ] 22:45:10.707 [Test worker] ChangeSet. - Table node_checkpoints created
[INFO ] 22:45:10.708 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_checkpoints_table::R3.Corda ran successfully in 10ms
[INFO ] 22:45:10.708 [Test worker] JdbcExecutor. - SELECT MAX(ORDEREXECUTED) FROM PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:10.722 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_checkpoints_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 94, '8:cc00474f248a40e330cf0f42c5b7e1a6', 'dropTable tableName=node_checkpoints; createTable tableName=node_checkpoints', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.724 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_checkpoint_blobs (flow_id NVARCHAR(64) NOT NULL, checkpoint_value BLOB NOT NULL, flow_state BLOB, timestamp TIMESTAMP NOT NULL, hmac VARBINARY(32) NOT NULL)
[INFO ] 22:45:10.725 [Test worker] ChangeSet. - Table node_checkpoint_blobs created
[INFO ] 22:45:10.725 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_checkpoint_blob_table::R3.Corda ran successfully in 1ms
[INFO ] 22:45:10.726 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_checkpoint_blob_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 95, '8:e973d6b794fe4753423964b13fe9fbe6', 'createTable tableName=node_checkpoint_blobs', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.728 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_flow_results (flow_id NVARCHAR(64) NOT NULL, result_value BLOB, timestamp TIMESTAMP NOT NULL)
[INFO ] 22:45:10.729 [Test worker] ChangeSet. - Table node_flow_results created
[INFO ] 22:45:10.729 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_flow_result_table::R3.Corda ran successfully in 2ms
[INFO ] 22:45:10.730 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_flow_result_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 96, '8:79f1c80610f26db24d6ab757f57e68b7', 'createTable tableName=node_flow_results', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.732 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_flow_exceptions (flow_id NVARCHAR(64) NOT NULL, type NVARCHAR(256) NOT NULL, exception_message NVARCHAR(2000), stack_trace NVARCHAR(2000) NOT NULL, exception_value BLOB, timestamp TIMESTAMP NOT NULL)
[INFO ] 22:45:10.733 [Test worker] ChangeSet. - Table node_flow_exceptions created
[INFO ] 22:45:10.733 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_flow_exceptions_table::R3.Corda ran successfully in 2ms
[INFO ] 22:45:10.734 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_flow_exceptions_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 97, '8:fb0d523c5cf42025c566f105731b34a2', 'createTable tableName=node_flow_exceptions', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.736 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_flow_metadata (flow_id NVARCHAR(64) NOT NULL, invocation_id NVARCHAR(128) NOT NULL, flow_name NVARCHAR(128) NOT NULL, flow_identifier NVARCHAR(512), started_type INT NOT NULL, flow_parameters BLOB NOT NULL, cordapp_name NVARCHAR(128) NOT NULL, platform_version INT NOT NULL, started_by NVARCHAR(128) NOT NULL, invocation_time TIMESTAMP NOT NULL, start_time TIMESTAMP NOT NULL, finish_time TIMESTAMP)
[INFO ] 22:45:10.737 [Test worker] ChangeSet. - Table node_flow_metadata created
[INFO ] 22:45:10.737 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_flow_metadata_table::R3.Corda ran successfully in 2ms
[INFO ] 22:45:10.738 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_flow_metadata_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 98, '8:edede3ddf0425fb6d012735a7415013e', 'createTable tableName=node_flow_metadata', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.740 [Test worker] JdbcExecutor. - ALTER TABLE PUBLIC.node_checkpoints ADD CONSTRAINT node_checkpoints_pk PRIMARY KEY (flow_id)
[INFO ] 22:45:10.742 [Test worker] ChangeSet. - Primary key added to node_checkpoints (flow_id)
[INFO ] 22:45:10.742 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_checkpoint_schema_primary_keys-h2_postgres_oracle::R3.Corda ran successfully in 3ms
[INFO ] 22:45:10.743 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_checkpoint_schema_primary_keys-h2_postgres_oracle', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 99, '8:23141f3e3b5917c1cd0196f7b03b8f71', 'addPrimaryKey constraintName=node_checkpoints_pk, tableName=node_checkpoints', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.744 [Test worker] JdbcExecutor. - CREATE UNIQUE INDEX PUBLIC.node_checkpoint_blobs_idx ON PUBLIC.node_checkpoint_blobs(flow_id)
[INFO ] 22:45:10.745 [Test worker] ChangeSet. - Index node_checkpoint_blobs_idx created
[INFO ] 22:45:10.745 [Test worker] JdbcExecutor. - CREATE UNIQUE INDEX PUBLIC.node_flow_results_idx ON PUBLIC.node_flow_results(flow_id)
[INFO ] 22:45:10.746 [Test worker] ChangeSet. - Index node_flow_results_idx created
[INFO ] 22:45:10.746 [Test worker] JdbcExecutor. - CREATE UNIQUE INDEX PUBLIC.node_flow_exceptions_idx ON PUBLIC.node_flow_exceptions(flow_id)
[INFO ] 22:45:10.747 [Test worker] ChangeSet. - Index node_flow_exceptions_idx created
[INFO ] 22:45:10.747 [Test worker] JdbcExecutor. - CREATE UNIQUE INDEX PUBLIC.node_flow_metadata_idx ON PUBLIC.node_flow_metadata(flow_id)
[INFO ] 22:45:10.749 [Test worker] ChangeSet. - Index node_flow_metadata_idx created
[INFO ] 22:45:10.749 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_checkpoint_schema_indexes::R3.Corda ran successfully in 5ms
[INFO ] 22:45:10.750 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_checkpoint_schema_indexes', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 100, '8:56612ddd39f61523990e27c1b429f467', 'createIndex indexName=node_checkpoint_blobs_idx, tableName=node_checkpoint_blobs; createIndex indexName=node_flow_results_idx, tableName=node_flow_results; createIndex indexName=node_flow_exceptions_idx, tableName=node_flow_exceptions; createIndex...', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.752 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_notary_committed_states (output_index INT NOT NULL, transaction_id NVARCHAR(64) NOT NULL, consuming_transaction_id NVARCHAR(64))
[INFO ] 22:45:10.753 [Test worker] ChangeSet. - Table node_notary_committed_states created
[INFO ] 22:45:10.753 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-16::R3.Corda ran successfully in 2ms
[INFO ] 22:45:10.754 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-16', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 101, '8:202eb6144ca2ddf982810c5b333117b8', 'createTable tableName=node_notary_committed_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.755 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_notary_request_log (id INT NOT NULL, consuming_transaction_id NVARCHAR(64) NOT NULL, requesting_party_name NVARCHAR(255) NOT NULL, request_timestamp TIMESTAMP NOT NULL, request_signature BLOB NOT NULL)
[INFO ] 22:45:10.756 [Test worker] ChangeSet. - Table node_notary_request_log created
[INFO ] 22:45:10.756 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1521131680317-17::R3.Corda ran successfully in 1ms
[INFO ] 22:45:10.757 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1521131680317-17', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 102, '8:da67caf796d1a61c253ac38815a6fa6b', 'createTable tableName=node_notary_request_log', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.758 [Test worker] JdbcExecutor. - ALTER TABLE PUBLIC.node_notary_committed_states ADD CONSTRAINT node_notary_states_pkey PRIMARY KEY (output_index, transaction_id)
[INFO ] 22:45:10.760 [Test worker] ChangeSet. - Primary key added to node_notary_committed_states (output_index, transaction_id)
[INFO ] 22:45:10.760 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-41::R3.Corda ran successfully in 2ms
[INFO ] 22:45:10.761 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-41', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 103, '8:73a5b14473602a38c02858208ef2af9d', 'addPrimaryKey constraintName=node_notary_states_pkey, tableName=node_notary_committed_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.762 [Test worker] JdbcExecutor. - ALTER TABLE PUBLIC.node_notary_request_log ADD CONSTRAINT node_notary_request_log_pkey PRIMARY KEY (id)
[INFO ] 22:45:10.763 [Test worker] ChangeSet. - Primary key added to node_notary_request_log (id)
[INFO ] 22:45:10.763 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1521131680317-48::R3.Corda ran successfully in 1ms
[INFO ] 22:45:10.765 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1521131680317-48', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 104, '8:7b2392b8e69fe748f22e678d1e8b1d3e', 'addPrimaryKey constraintName=node_notary_request_log_pkey, tableName=node_notary_request_log', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.766 [Test worker] JdbcExecutor. - ALTER TABLE PUBLIC.node_notary_committed_states ALTER COLUMN consuming_transaction_id SET NOT NULL
[INFO ] 22:45:10.768 [Test worker] ChangeSet. - NOT NULL constraint has been added to node_notary_committed_states.consuming_transaction_id
[INFO ] 22:45:10.768 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::nullability::R3.Corda ran successfully in 2ms
[INFO ] 22:45:10.769 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('nullability', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 105, '8:3a26bc5f7d8e2feba54946ed0460d0a6', 'addNotNullConstraint columnName=consuming_transaction_id, tableName=node_notary_committed_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.781 [Test worker] ChangeSet. - Marking ChangeSet: migration/node-notary.changelog-v2.xml::rename-table-notary-commit-log::R3.Corda ran despite precondition failure due to onFail='MARK_RAN': 
          master.changelog.json : Table PUBLIC.node_notary_commit_log does not exist

[INFO ] 22:45:10.782 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('rename-table-notary-commit-log', 'R3.Corda', 'migration/node-notary.changelog-v2.xml', NOW(), 106, '8:18c525e013adbd6f729983990933c4f4', 'renameTable newTableName=node_notary_committed_states, oldTableName=node_notary_commit_log', '', 'MARK_RAN', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.785 [Test worker] ChangeSet. - Marking ChangeSet: migration/node-notary.changelog-v2.xml::create-notary-request-log-table::R3.Corda ran despite precondition failure due to onFail='MARK_RAN': 
          master.changelog.json : Not precondition failed

[INFO ] 22:45:10.787 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('create-notary-request-log-table', 'R3.Corda', 'migration/node-notary.changelog-v2.xml', NOW(), 107, '8:d25c67b0275b7f205b89a85407bf51d0', 'createTable tableName=node_notary_request_log; addPrimaryKey constraintName=node_notary_request_log_pkey, tableName=node_notary_request_log', '', 'MARK_RAN', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.789 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('non-clustered_pk-notary_state', 'R3.Corda', 'migration/node-notary.changelog-pkey.xml', NOW(), 108, '8:5b30922594a05dde8768e8af608451f5', 'dropPrimaryKey constraintName=node_notary_states_pkey, tableName=node_notary_committed_states; addPrimaryKey constraintName=node_notary_states_pkey, tableName=node_notary_committed_states', '', 'MARK_RAN', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.791 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_notary_committed_txs (transaction_id NVARCHAR(64) NOT NULL)
[INFO ] 22:45:10.792 [Test worker] ChangeSet. - Table node_notary_committed_txs created
[INFO ] 22:45:10.793 [Test worker] JdbcExecutor. - ALTER TABLE PUBLIC.node_notary_committed_txs ADD CONSTRAINT node_notary_transactions_pkey PRIMARY KEY (transaction_id)
[INFO ] 22:45:10.794 [Test worker] ChangeSet. - Primary key added to node_notary_committed_txs (transaction_id)
[INFO ] 22:45:10.794 [Test worker] ChangeSet. - ChangeSet migration/node-notary.changelog-committed-transactions-table.xml::create-notary-committed-transactions-table::R3.Corda ran successfully in 3ms
[INFO ] 22:45:10.795 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('create-notary-committed-transactions-table', 'R3.Corda', 'migration/node-notary.changelog-committed-transactions-table.xml', NOW(), 109, '8:ab59160cd3f0ceb591177364f90aa039', 'createTable tableName=node_notary_committed_txs; addPrimaryKey constraintName=node_notary_transactions_pkey, tableName=node_notary_committed_txs', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.796 [Test worker] ChangeSet. - Marking ChangeSet: migration/node-notary.changelog-v3.xml::notary-request-log-change-id-type-oracle::R3.Corda ran despite precondition failure due to onFail='MARK_RAN': 
          master.changelog.json : DBMS Precondition failed: expected oracle, got h2

[INFO ] 22:45:10.798 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('notary-request-log-change-id-type-oracle', 'R3.Corda', 'migration/node-notary.changelog-v3.xml', NOW(), 110, '8:b69dc22ed24041b6f852d1c0393dd5db', 'addColumn tableName=node_notary_request_log; sql; dropPrimaryKey constraintName=node_notary_request_log_pkey, tableName=node_notary_request_log; dropColumn columnName=id, tableName=node_notary_request_log; renameColumn newColumnName=id, oldColumnN...', '', 'MARK_RAN', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.800 [Test worker] JdbcExecutor. - ALTER TABLE PUBLIC.node_notary_request_log DROP PRIMARY KEY
[INFO ] 22:45:10.801 [Test worker] ChangeSet. - Primary key dropped from node_notary_request_log
[INFO ] 22:45:10.801 [Test worker] JdbcExecutor. - ALTER TABLE PUBLIC.node_notary_request_log ALTER COLUMN id NVARCHAR(76) NOT NULL
[INFO ] 22:45:10.805 [Test worker] ChangeSet. - node_notary_request_log.id datatype was changed to NVARCHAR(76) NOT NULL
[INFO ] 22:45:10.805 [Test worker] JdbcExecutor. - ALTER TABLE PUBLIC.node_notary_request_log ADD CONSTRAINT node_notary_request_log_pkey PRIMARY KEY (id)
[INFO ] 22:45:10.806 [Test worker] ChangeSet. - Primary key added to node_notary_request_log (id)
[INFO ] 22:45:10.806 [Test worker] ChangeSet. - ChangeSet migration/node-notary.changelog-v3.xml::notary-request-log-change-id-type-others::R3.Corda ran successfully in 7ms
[INFO ] 22:45:10.807 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('notary-request-log-change-id-type-others', 'R3.Corda', 'migration/node-notary.changelog-v3.xml', NOW(), 111, '8:a753963cc30ce326678e51ae5fd7e529', 'dropPrimaryKey constraintName=node_notary_request_log_pkey, tableName=node_notary_request_log; modifyDataType columnName=id, tableName=node_notary_request_log; addPrimaryKey constraintName=node_notary_request_log_pkey, tableName=node_notary_reques...', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.809 [Test worker] JdbcExecutor. - ALTER TABLE PUBLIC.node_notary_request_log ADD worker_node_x500_name NVARCHAR(255)
[INFO ] 22:45:10.816 [Test worker] ChangeSet. - Columns worker_node_x500_name(NVARCHAR(255)) added to node_notary_request_log
[INFO ] 22:45:10.816 [Test worker] ChangeSet. - ChangeSet migration/node-notary.changelog-worker-logging.xml::worker-logging::R3.Corda ran successfully in 8ms
[INFO ] 22:45:10.817 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('worker-logging', 'R3.Corda', 'migration/node-notary.changelog-worker-logging.xml', NOW(), 112, '8:2d4a2d176d83695cdbd3fad929c6c24b', 'addColumn tableName=node_notary_request_log', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844710690')
[INFO ] 22:45:10.819 [Test worker] StandardLockService. - Successfully released change log lock
[INFO ] 22:45:10.835 [Test worker] JdbcExecutor. - SELECT MD5SUM FROM PUBLIC.DATABASECHANGELOG WHERE MD5SUM IS NOT NULL
[INFO ] 22:45:10.836 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:10.836 [Test worker] StandardChangeLogHistoryService. - Reading from PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:10.836 [Test worker] JdbcExecutor. - SELECT * FROM PUBLIC.DATABASECHANGELOG ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC
[INFO ] 22:45:10.840 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 22:45:10.840 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 22:45:10.841 [Test worker] JdbcExecutor. - SELECT LOCKED FROM PUBLIC.DATABASECHANGELOGLOCK WHERE ID=1
[INFO ] 22:45:10.843 [Test worker] StandardLockService. - Successfully acquired change log lock
[INFO ] 22:45:10.845 [Test worker] StandardLockService. - Successfully released change log lock
[INFO ] 22:45:10.872 [Test worker] InternalMockNetwork$MockNode. - Connected to H2 database.
[INFO ] 22:45:10.941 [Test worker] HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)]
[INFO ] 22:45:10.944 [Test worker] BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)]
[INFO ] 22:45:11.142 [Test worker] Version. - HHH000412: Hibernate Core {5.4.3.Final}
[INFO ] 22:45:11.242 [Test worker] Version. - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[INFO ] 22:45:11.393 [Test worker] ConnectionProviderInitiator. - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[INFO ] 22:45:11.425 [Test worker] Dialect. - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[INFO ] 22:45:12.623 [Test worker] access. - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@12683f4b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[INFO ] 22:45:12.679 [Test worker] JtaPlatformInitiator. - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 22:45:12.860 [Test worker] BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)]
[INFO ] 22:45:13.069 [Test worker] InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null
[INFO ] 22:45:13.069 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1615844713069)
[INFO ] 22:45:13.073 [Test worker] PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH
[INFO ] 22:45:13.187 [Test worker] InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1615844713069)
[INFO ] 22:45:13.226 [Test worker] NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations]
[INFO ] 22:45:13.237 [Test worker] MockNodeMessagingService. - Status change to true
[INFO ] 22:45:13.238 [Test worker] InternalMockNetwork$MockNode. - MessagingService active change to: true
[INFO ] 22:45:13.242 [MockNode-1-2] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1615844713069)
[INFO ] 22:45:13.262 [MockNode-1-2] PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing
[INFO ] 22:45:13.325 [Test worker] ClassloaderUtils. - Contracts loading for 'C:\Users\Jonny\AppData\Local\Temp\attachment107700941632279171.jar' took 5 msec
[INFO ] 22:45:13.338 [Test worker] NodeAttachmentService. - Stored new attachment: id=0A89502481217851863D1A8DEDA12245F6AE0F484316901FA4A59602103E3596 uploader=app filename=Negotiation CorDapp
[INFO ] 22:45:13.345 [Test worker] NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService
[INFO ] 22:45:13.735 [Test worker] SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1615844713069)
[INFO ] 22:45:13.741 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1615844713069)
[INFO ] 22:45:13.743 [Test worker] PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing
[INFO ] 22:45:13.743 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1615844713069)
[INFO ] 22:45:13.744 [Test worker] PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing
[INFO ] 22:45:13.753 [Test worker] JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20210315-214455.174-489E42A2EAEC62B9\nodes\1\cordapps]
[INFO ] 22:45:13.758 [Test worker] JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Jonny/Desktop/corda/samples-kotlin/Advanced/negotiation-cordapp/workflows/build/mock-network/20210315-214455.174-489E42A2EAEC62B9/nodes/1/cordapps/contracts-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Jonny/Desktop/corda/samples-kotlin/Advanced/negotiation-cordapp/workflows/build/mock-network/20210315-214455.174-489E42A2EAEC62B9/nodes/1/cordapps/workflows-0.2.jar, rootPackageName=null)
[INFO ] 22:45:13.759 [Test worker] JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Jonny/Desktop/corda/samples-kotlin/Advanced/negotiation-cordapp/workflows/build/mock-network/20210315-214455.174-489E42A2EAEC62B9/nodes/1/cordapps/contracts-0.2.jar
[INFO ] 22:45:13.768 [Test worker] JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Jonny/Desktop/corda/samples-kotlin/Advanced/negotiation-cordapp/workflows/build/mock-network/20210315-214455.174-489E42A2EAEC62B9/nodes/1/cordapps/workflows-0.2.jar
[INFO ] 22:45:13.789 [Test worker] InternalMockNetwork$MockNode. - MessagingService active change to: false
[INFO ] 22:45:13.790 [Test worker] InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads
[INFO ] 22:45:13.792 [Test worker] InternalMockNetwork$MockNode. - Node starting up ...
[INFO ] 22:45:13.814 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.AddItineraryFlow$Initiator to initiate net.corda.samples.negotiation.flows.AddItineraryFlow$Responder (version 1)
[INFO ] 22:45:13.814 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.ArrivalFlow$Initiator to initiate net.corda.samples.negotiation.flows.ArrivalFlow$Responder (version 1)
[INFO ] 22:45:13.814 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.CompleteFlow$Initiator to initiate net.corda.samples.negotiation.flows.CompleteFlow$Responder (version 1)
[INFO ] 22:45:13.814 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.NoticeFlow$Initiator to initiate net.corda.samples.negotiation.flows.NoticeFlow$Responder (version 1)
[INFO ] 22:45:13.814 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.OrderFlow$Initiator to initiate net.corda.samples.negotiation.flows.OrderFlow$Responder (version 1)
[INFO ] 22:45:13.814 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.UpdateFlow$Initiator to initiate net.corda.samples.negotiation.flows.UpdateFlow$Responder (version 1)
[INFO ] 22:45:13.817 [Test worker] InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-03-15T21:44:55.116Z
      epoch=1
  }
[INFO ] 22:45:13.817 [Test worker] HikariDataSource. - HikariPool-2 - Starting...
[INFO ] 22:45:13.827 [Test worker] HikariDataSource. - HikariPool-2 - Start completed.
[INFO ] 22:45:14.014 [Test worker] JdbcExecutor. - SELECT MD5SUM FROM PUBLIC.DATABASECHANGELOG WHERE MD5SUM IS NOT NULL
[INFO ] 22:45:14.015 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:14.015 [Test worker] StandardChangeLogHistoryService. - Reading from PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:14.015 [Test worker] JdbcExecutor. - SELECT * FROM PUBLIC.DATABASECHANGELOG ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC
[INFO ] 22:45:14.018 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 22:45:14.018 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 22:45:14.051 [Test worker] JdbcExecutor. - SELECT LOCKED FROM PUBLIC.DATABASECHANGELOGLOCK WHERE ID=1
[INFO ] 22:45:14.052 [Test worker] StandardLockService. - Successfully acquired change log lock
[INFO ] 22:45:14.056 [Test worker] JdbcExecutor. - DROP TABLE PUBLIC.node_checkpoints
[INFO ] 22:45:14.056 [Test worker] ChangeSet. - Table node_checkpoints dropped
[INFO ] 22:45:14.057 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_checkpoints (flow_id NVARCHAR(64) NOT NULL, status INT NOT NULL, compatible BOOLEAN NOT NULL, progress_step NVARCHAR(256), flow_io_request NVARCHAR(128), timestamp TIMESTAMP NOT NULL)
[INFO ] 22:45:14.057 [Test worker] ChangeSet. - Table node_checkpoints created
[INFO ] 22:45:14.058 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_checkpoints_table::R3.Corda ran successfully in 2ms
[INFO ] 22:45:14.058 [Test worker] JdbcExecutor. - SELECT MAX(ORDEREXECUTED) FROM PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:14.059 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_checkpoints_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 94, '8:cc00474f248a40e330cf0f42c5b7e1a6', 'dropTable tableName=node_checkpoints; createTable tableName=node_checkpoints', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844714052')
[INFO ] 22:45:14.060 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_checkpoint_blobs (flow_id NVARCHAR(64) NOT NULL, checkpoint_value BLOB NOT NULL, flow_state BLOB, timestamp TIMESTAMP NOT NULL, hmac VARBINARY(32) NOT NULL)
[INFO ] 22:45:14.060 [Test worker] ChangeSet. - Table node_checkpoint_blobs created
[INFO ] 22:45:14.060 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_checkpoint_blob_table::R3.Corda ran successfully in 0ms
[INFO ] 22:45:14.061 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_checkpoint_blob_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 95, '8:e973d6b794fe4753423964b13fe9fbe6', 'createTable tableName=node_checkpoint_blobs', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844714052')
[INFO ] 22:45:14.062 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_flow_results (flow_id NVARCHAR(64) NOT NULL, result_value BLOB, timestamp TIMESTAMP NOT NULL)
[INFO ] 22:45:14.062 [Test worker] ChangeSet. - Table node_flow_results created
[INFO ] 22:45:14.062 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_flow_result_table::R3.Corda ran successfully in 0ms
[INFO ] 22:45:14.063 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_flow_result_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 96, '8:79f1c80610f26db24d6ab757f57e68b7', 'createTable tableName=node_flow_results', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844714052')
[INFO ] 22:45:14.064 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_flow_exceptions (flow_id NVARCHAR(64) NOT NULL, type NVARCHAR(256) NOT NULL, exception_message NVARCHAR(2000), stack_trace NVARCHAR(2000) NOT NULL, exception_value BLOB, timestamp TIMESTAMP NOT NULL)
[INFO ] 22:45:14.065 [Test worker] ChangeSet. - Table node_flow_exceptions created
[INFO ] 22:45:14.065 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_flow_exceptions_table::R3.Corda ran successfully in 1ms
[INFO ] 22:45:14.066 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_flow_exceptions_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 97, '8:fb0d523c5cf42025c566f105731b34a2', 'createTable tableName=node_flow_exceptions', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844714052')
[INFO ] 22:45:14.067 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_flow_metadata (flow_id NVARCHAR(64) NOT NULL, invocation_id NVARCHAR(128) NOT NULL, flow_name NVARCHAR(128) NOT NULL, flow_identifier NVARCHAR(512), started_type INT NOT NULL, flow_parameters BLOB NOT NULL, cordapp_name NVARCHAR(128) NOT NULL, platform_version INT NOT NULL, started_by NVARCHAR(128) NOT NULL, invocation_time TIMESTAMP NOT NULL, start_time TIMESTAMP NOT NULL, finish_time TIMESTAMP)
[INFO ] 22:45:14.068 [Test worker] ChangeSet. - Table node_flow_metadata created
[INFO ] 22:45:14.068 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_flow_metadata_table::R3.Corda ran successfully in 2ms
[INFO ] 22:45:14.068 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_flow_metadata_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 98, '8:edede3ddf0425fb6d012735a7415013e', 'createTable tableName=node_flow_metadata', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844714052')
[INFO ] 22:45:14.070 [Test worker] JdbcExecutor. - ALTER TABLE PUBLIC.node_checkpoints ADD CONSTRAINT node_checkpoints_pk PRIMARY KEY (flow_id)
[INFO ] 22:45:14.071 [Test worker] ChangeSet. - Primary key added to node_checkpoints (flow_id)
[INFO ] 22:45:14.071 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_checkpoint_schema_primary_keys-h2_postgres_oracle::R3.Corda ran successfully in 1ms
[INFO ] 22:45:14.072 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_checkpoint_schema_primary_keys-h2_postgres_oracle', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 99, '8:23141f3e3b5917c1cd0196f7b03b8f71', 'addPrimaryKey constraintName=node_checkpoints_pk, tableName=node_checkpoints', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844714052')
[INFO ] 22:45:14.073 [Test worker] JdbcExecutor. - CREATE UNIQUE INDEX PUBLIC.node_checkpoint_blobs_idx ON PUBLIC.node_checkpoint_blobs(flow_id)
[INFO ] 22:45:14.074 [Test worker] ChangeSet. - Index node_checkpoint_blobs_idx created
[INFO ] 22:45:14.074 [Test worker] JdbcExecutor. - CREATE UNIQUE INDEX PUBLIC.node_flow_results_idx ON PUBLIC.node_flow_results(flow_id)
[INFO ] 22:45:14.074 [Test worker] ChangeSet. - Index node_flow_results_idx created
[INFO ] 22:45:14.074 [Test worker] JdbcExecutor. - CREATE UNIQUE INDEX PUBLIC.node_flow_exceptions_idx ON PUBLIC.node_flow_exceptions(flow_id)
[INFO ] 22:45:14.075 [Test worker] ChangeSet. - Index node_flow_exceptions_idx created
[INFO ] 22:45:14.075 [Test worker] JdbcExecutor. - CREATE UNIQUE INDEX PUBLIC.node_flow_metadata_idx ON PUBLIC.node_flow_metadata(flow_id)
[INFO ] 22:45:14.075 [Test worker] ChangeSet. - Index node_flow_metadata_idx created
[INFO ] 22:45:14.076 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_checkpoint_schema_indexes::R3.Corda ran successfully in 3ms
[INFO ] 22:45:14.076 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_checkpoint_schema_indexes', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 100, '8:56612ddd39f61523990e27c1b429f467', 'createIndex indexName=node_checkpoint_blobs_idx, tableName=node_checkpoint_blobs; createIndex indexName=node_flow_results_idx, tableName=node_flow_results; createIndex indexName=node_flow_exceptions_idx, tableName=node_flow_exceptions; createIndex...', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844714052')
[INFO ] 22:45:14.078 [Test worker] StandardLockService. - Successfully released change log lock
[INFO ] 22:45:14.086 [Test worker] JdbcExecutor. - SELECT MD5SUM FROM PUBLIC.DATABASECHANGELOG WHERE MD5SUM IS NOT NULL
[INFO ] 22:45:14.086 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:14.086 [Test worker] StandardChangeLogHistoryService. - Reading from PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:14.086 [Test worker] JdbcExecutor. - SELECT * FROM PUBLIC.DATABASECHANGELOG ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC
[INFO ] 22:45:14.088 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 22:45:14.088 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 22:45:14.089 [Test worker] JdbcExecutor. - SELECT LOCKED FROM PUBLIC.DATABASECHANGELOGLOCK WHERE ID=1
[INFO ] 22:45:14.090 [Test worker] StandardLockService. - Successfully acquired change log lock
[INFO ] 22:45:14.091 [Test worker] StandardLockService. - Successfully released change log lock
[INFO ] 22:45:14.091 [Test worker] InternalMockNetwork$MockNode. - Connected to H2 database.
[INFO ] 22:45:14.094 [Test worker] HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)]
[INFO ] 22:45:14.094 [Test worker] BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)]
[INFO ] 22:45:14.099 [Test worker] ConnectionProviderInitiator. - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[INFO ] 22:45:14.099 [Test worker] Dialect. - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[INFO ] 22:45:14.171 [Test worker] access. - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@56e51811] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[INFO ] 22:45:14.203 [Test worker] JtaPlatformInitiator. - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 22:45:14.203 [Test worker] BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)]
[INFO ] 22:45:14.205 [Test worker] InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key!
[INFO ] 22:45:14.224 [Test worker] InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null
[INFO ] 22:45:14.224 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1615844714224)
[INFO ] 22:45:14.226 [Test worker] PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB
[INFO ] 22:45:14.233 [Test worker] InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1615844714224)
[INFO ] 22:45:14.239 [Test worker] NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations]
[INFO ] 22:45:14.239 [Test worker] MockNodeMessagingService. - Status change to true
[INFO ] 22:45:14.239 [Test worker] InternalMockNetwork$MockNode. - MessagingService active change to: true
[INFO ] 22:45:14.243 [MockNode-2-2] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1615844714224)
[INFO ] 22:45:14.247 [MockNode-2-2] PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing
[INFO ] 22:45:14.263 [Test worker] ClassloaderUtils. - Contracts loading for 'C:\Users\Jonny\AppData\Local\Temp\attachment3913859154787682158.jar' took 3 msec
[INFO ] 22:45:14.271 [Test worker] NodeAttachmentService. - Stored new attachment: id=0A89502481217851863D1A8DEDA12245F6AE0F484316901FA4A59602103E3596 uploader=app filename=Negotiation CorDapp
[INFO ] 22:45:14.290 [Test worker] SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1615844714224)
[INFO ] 22:45:14.290 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1615844713069)
[INFO ] 22:45:14.291 [Test worker] PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH
[INFO ] 22:45:14.299 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1615844714224)
[INFO ] 22:45:14.301 [Test worker] PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB
[INFO ] 22:45:14.308 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1615844714224)
[INFO ] 22:45:14.308 [Test worker] PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing
[INFO ] 22:45:14.308 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1615844714224)
[INFO ] 22:45:14.308 [Test worker] PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing
[INFO ] 22:45:14.314 [Test worker] JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20210315-214455.174-489E42A2EAEC62B9\nodes\2\cordapps]
[INFO ] 22:45:14.315 [Test worker] JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Jonny/Desktop/corda/samples-kotlin/Advanced/negotiation-cordapp/workflows/build/mock-network/20210315-214455.174-489E42A2EAEC62B9/nodes/2/cordapps/contracts-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Jonny/Desktop/corda/samples-kotlin/Advanced/negotiation-cordapp/workflows/build/mock-network/20210315-214455.174-489E42A2EAEC62B9/nodes/2/cordapps/workflows-0.2.jar, rootPackageName=null)
[INFO ] 22:45:14.315 [Test worker] JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Jonny/Desktop/corda/samples-kotlin/Advanced/negotiation-cordapp/workflows/build/mock-network/20210315-214455.174-489E42A2EAEC62B9/nodes/2/cordapps/contracts-0.2.jar
[INFO ] 22:45:14.324 [Test worker] JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Jonny/Desktop/corda/samples-kotlin/Advanced/negotiation-cordapp/workflows/build/mock-network/20210315-214455.174-489E42A2EAEC62B9/nodes/2/cordapps/workflows-0.2.jar
[INFO ] 22:45:14.345 [Test worker] InternalMockNetwork$MockNode. - MessagingService active change to: false
[INFO ] 22:45:14.345 [Test worker] InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads
[INFO ] 22:45:14.346 [Test worker] InternalMockNetwork$MockNode. - Node starting up ...
[INFO ] 22:45:14.369 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.AddItineraryFlow$Initiator to initiate net.corda.samples.negotiation.flows.AddItineraryFlow$Responder (version 1)
[INFO ] 22:45:14.369 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.ArrivalFlow$Initiator to initiate net.corda.samples.negotiation.flows.ArrivalFlow$Responder (version 1)
[INFO ] 22:45:14.374 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.CompleteFlow$Initiator to initiate net.corda.samples.negotiation.flows.CompleteFlow$Responder (version 1)
[INFO ] 22:45:14.375 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.NoticeFlow$Initiator to initiate net.corda.samples.negotiation.flows.NoticeFlow$Responder (version 1)
[INFO ] 22:45:14.375 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.OrderFlow$Initiator to initiate net.corda.samples.negotiation.flows.OrderFlow$Responder (version 1)
[INFO ] 22:45:14.375 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.UpdateFlow$Initiator to initiate net.corda.samples.negotiation.flows.UpdateFlow$Responder (version 1)
[INFO ] 22:45:14.377 [Test worker] InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-03-15T21:44:55.116Z
      epoch=1
  }
[INFO ] 22:45:14.377 [Test worker] HikariDataSource. - HikariPool-3 - Starting...
[INFO ] 22:45:14.388 [Test worker] HikariDataSource. - HikariPool-3 - Start completed.
[INFO ] 22:45:14.527 [Test worker] JdbcExecutor. - SELECT MD5SUM FROM PUBLIC.DATABASECHANGELOG WHERE MD5SUM IS NOT NULL
[INFO ] 22:45:14.528 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:14.528 [Test worker] StandardChangeLogHistoryService. - Reading from PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:14.528 [Test worker] JdbcExecutor. - SELECT * FROM PUBLIC.DATABASECHANGELOG ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC
[INFO ] 22:45:14.529 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 22:45:14.529 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 22:45:14.552 [Test worker] JdbcExecutor. - SELECT LOCKED FROM PUBLIC.DATABASECHANGELOGLOCK WHERE ID=1
[INFO ] 22:45:14.553 [Test worker] StandardLockService. - Successfully acquired change log lock
[INFO ] 22:45:14.557 [Test worker] JdbcExecutor. - DROP TABLE PUBLIC.node_checkpoints
[INFO ] 22:45:14.558 [Test worker] ChangeSet. - Table node_checkpoints dropped
[INFO ] 22:45:14.558 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_checkpoints (flow_id NVARCHAR(64) NOT NULL, status INT NOT NULL, compatible BOOLEAN NOT NULL, progress_step NVARCHAR(256), flow_io_request NVARCHAR(128), timestamp TIMESTAMP NOT NULL)
[INFO ] 22:45:14.559 [Test worker] ChangeSet. - Table node_checkpoints created
[INFO ] 22:45:14.559 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_checkpoints_table::R3.Corda ran successfully in 2ms
[INFO ] 22:45:14.559 [Test worker] JdbcExecutor. - SELECT MAX(ORDEREXECUTED) FROM PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:14.561 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_checkpoints_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 94, '8:cc00474f248a40e330cf0f42c5b7e1a6', 'dropTable tableName=node_checkpoints; createTable tableName=node_checkpoints', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844714553')
[INFO ] 22:45:14.562 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_checkpoint_blobs (flow_id NVARCHAR(64) NOT NULL, checkpoint_value BLOB NOT NULL, flow_state BLOB, timestamp TIMESTAMP NOT NULL, hmac VARBINARY(32) NOT NULL)
[INFO ] 22:45:14.563 [Test worker] ChangeSet. - Table node_checkpoint_blobs created
[INFO ] 22:45:14.563 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_checkpoint_blob_table::R3.Corda ran successfully in 1ms
[INFO ] 22:45:14.564 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_checkpoint_blob_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 95, '8:e973d6b794fe4753423964b13fe9fbe6', 'createTable tableName=node_checkpoint_blobs', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844714553')
[INFO ] 22:45:14.565 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_flow_results (flow_id NVARCHAR(64) NOT NULL, result_value BLOB, timestamp TIMESTAMP NOT NULL)
[INFO ] 22:45:14.566 [Test worker] ChangeSet. - Table node_flow_results created
[INFO ] 22:45:14.566 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_flow_result_table::R3.Corda ran successfully in 1ms
[INFO ] 22:45:14.567 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_flow_result_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 96, '8:79f1c80610f26db24d6ab757f57e68b7', 'createTable tableName=node_flow_results', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844714553')
[INFO ] 22:45:14.568 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_flow_exceptions (flow_id NVARCHAR(64) NOT NULL, type NVARCHAR(256) NOT NULL, exception_message NVARCHAR(2000), stack_trace NVARCHAR(2000) NOT NULL, exception_value BLOB, timestamp TIMESTAMP NOT NULL)
[INFO ] 22:45:14.569 [Test worker] ChangeSet. - Table node_flow_exceptions created
[INFO ] 22:45:14.569 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_flow_exceptions_table::R3.Corda ran successfully in 1ms
[INFO ] 22:45:14.570 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_flow_exceptions_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 97, '8:fb0d523c5cf42025c566f105731b34a2', 'createTable tableName=node_flow_exceptions', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844714553')
[INFO ] 22:45:14.571 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_flow_metadata (flow_id NVARCHAR(64) NOT NULL, invocation_id NVARCHAR(128) NOT NULL, flow_name NVARCHAR(128) NOT NULL, flow_identifier NVARCHAR(512), started_type INT NOT NULL, flow_parameters BLOB NOT NULL, cordapp_name NVARCHAR(128) NOT NULL, platform_version INT NOT NULL, started_by NVARCHAR(128) NOT NULL, invocation_time TIMESTAMP NOT NULL, start_time TIMESTAMP NOT NULL, finish_time TIMESTAMP)
[INFO ] 22:45:14.572 [Test worker] ChangeSet. - Table node_flow_metadata created
[INFO ] 22:45:14.572 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_flow_metadata_table::R3.Corda ran successfully in 1ms
[INFO ] 22:45:14.573 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_flow_metadata_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 98, '8:edede3ddf0425fb6d012735a7415013e', 'createTable tableName=node_flow_metadata', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844714553')
[INFO ] 22:45:14.575 [Test worker] JdbcExecutor. - ALTER TABLE PUBLIC.node_checkpoints ADD CONSTRAINT node_checkpoints_pk PRIMARY KEY (flow_id)
[INFO ] 22:45:14.575 [Test worker] ChangeSet. - Primary key added to node_checkpoints (flow_id)
[INFO ] 22:45:14.575 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_checkpoint_schema_primary_keys-h2_postgres_oracle::R3.Corda ran successfully in 1ms
[INFO ] 22:45:14.576 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_checkpoint_schema_primary_keys-h2_postgres_oracle', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 99, '8:23141f3e3b5917c1cd0196f7b03b8f71', 'addPrimaryKey constraintName=node_checkpoints_pk, tableName=node_checkpoints', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844714553')
[INFO ] 22:45:14.578 [Test worker] JdbcExecutor. - CREATE UNIQUE INDEX PUBLIC.node_checkpoint_blobs_idx ON PUBLIC.node_checkpoint_blobs(flow_id)
[INFO ] 22:45:14.579 [Test worker] ChangeSet. - Index node_checkpoint_blobs_idx created
[INFO ] 22:45:14.579 [Test worker] JdbcExecutor. - CREATE UNIQUE INDEX PUBLIC.node_flow_results_idx ON PUBLIC.node_flow_results(flow_id)
[INFO ] 22:45:14.580 [Test worker] ChangeSet. - Index node_flow_results_idx created
[INFO ] 22:45:14.580 [Test worker] JdbcExecutor. - CREATE UNIQUE INDEX PUBLIC.node_flow_exceptions_idx ON PUBLIC.node_flow_exceptions(flow_id)
[INFO ] 22:45:14.580 [Test worker] ChangeSet. - Index node_flow_exceptions_idx created
[INFO ] 22:45:14.580 [Test worker] JdbcExecutor. - CREATE UNIQUE INDEX PUBLIC.node_flow_metadata_idx ON PUBLIC.node_flow_metadata(flow_id)
[INFO ] 22:45:14.581 [Test worker] ChangeSet. - Index node_flow_metadata_idx created
[INFO ] 22:45:14.581 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_checkpoint_schema_indexes::R3.Corda ran successfully in 4ms
[INFO ] 22:45:14.582 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_checkpoint_schema_indexes', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 100, '8:56612ddd39f61523990e27c1b429f467', 'createIndex indexName=node_checkpoint_blobs_idx, tableName=node_checkpoint_blobs; createIndex indexName=node_flow_results_idx, tableName=node_flow_results; createIndex indexName=node_flow_exceptions_idx, tableName=node_flow_exceptions; createIndex...', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844714553')
[INFO ] 22:45:14.584 [Test worker] StandardLockService. - Successfully released change log lock
[INFO ] 22:45:14.593 [Test worker] JdbcExecutor. - SELECT MD5SUM FROM PUBLIC.DATABASECHANGELOG WHERE MD5SUM IS NOT NULL
[INFO ] 22:45:14.594 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:14.594 [Test worker] StandardChangeLogHistoryService. - Reading from PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:14.594 [Test worker] JdbcExecutor. - SELECT * FROM PUBLIC.DATABASECHANGELOG ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC
[INFO ] 22:45:14.595 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 22:45:14.595 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 22:45:14.596 [Test worker] JdbcExecutor. - SELECT LOCKED FROM PUBLIC.DATABASECHANGELOGLOCK WHERE ID=1
[INFO ] 22:45:14.596 [Test worker] StandardLockService. - Successfully acquired change log lock
[INFO ] 22:45:14.597 [Test worker] StandardLockService. - Successfully released change log lock
[INFO ] 22:45:14.598 [Test worker] InternalMockNetwork$MockNode. - Connected to H2 database.
[INFO ] 22:45:14.600 [Test worker] HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)]
[INFO ] 22:45:14.600 [Test worker] BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)]
[INFO ] 22:45:14.605 [Test worker] ConnectionProviderInitiator. - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[INFO ] 22:45:14.605 [Test worker] Dialect. - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[INFO ] 22:45:14.694 [Test worker] access. - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@144d4cdd] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[INFO ] 22:45:14.734 [Test worker] JtaPlatformInitiator. - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 22:45:14.734 [Test worker] BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)]
[INFO ] 22:45:14.735 [Test worker] InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key!
[INFO ] 22:45:14.752 [Test worker] InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null
[INFO ] 22:45:14.752 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1615844714752)
[INFO ] 22:45:14.753 [Test worker] PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB
[INFO ] 22:45:14.760 [Test worker] InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1615844714752)
[INFO ] 22:45:14.766 [Test worker] NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations]
[INFO ] 22:45:14.766 [Test worker] MockNodeMessagingService. - Status change to true
[INFO ] 22:45:14.766 [Test worker] InternalMockNetwork$MockNode. - MessagingService active change to: true
[INFO ] 22:45:14.770 [MockNode-3-2] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1615844714752)
[INFO ] 22:45:14.774 [MockNode-3-2] PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing
[INFO ] 22:45:14.789 [Test worker] ClassloaderUtils. - Contracts loading for 'C:\Users\Jonny\AppData\Local\Temp\attachment7156273593159721973.jar' took 4 msec
[INFO ] 22:45:14.795 [Test worker] NodeAttachmentService. - Stored new attachment: id=0A89502481217851863D1A8DEDA12245F6AE0F484316901FA4A59602103E3596 uploader=app filename=Negotiation CorDapp
[INFO ] 22:45:14.813 [Test worker] SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1615844714752)
[INFO ] 22:45:14.813 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1615844713069)
[INFO ] 22:45:14.815 [Test worker] PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH
[INFO ] 22:45:14.824 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1615844714752)
[INFO ] 22:45:14.825 [Test worker] PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB
[INFO ] 22:45:14.833 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1615844714224)
[INFO ] 22:45:14.834 [Test worker] PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB
[INFO ] 22:45:14.844 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1615844714752)
[INFO ] 22:45:14.844 [Test worker] PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB
[INFO ] 22:45:14.850 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1615844714752)
[INFO ] 22:45:14.850 [Test worker] PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing
[INFO ] 22:45:14.850 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1615844714752)
[INFO ] 22:45:14.850 [Test worker] PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing
[INFO ] 22:45:14.856 [Test worker] JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20210315-214455.174-489E42A2EAEC62B9\nodes\3\cordapps]
[INFO ] 22:45:14.856 [Test worker] JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Jonny/Desktop/corda/samples-kotlin/Advanced/negotiation-cordapp/workflows/build/mock-network/20210315-214455.174-489E42A2EAEC62B9/nodes/3/cordapps/contracts-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Jonny/Desktop/corda/samples-kotlin/Advanced/negotiation-cordapp/workflows/build/mock-network/20210315-214455.174-489E42A2EAEC62B9/nodes/3/cordapps/workflows-0.2.jar, rootPackageName=null)
[INFO ] 22:45:14.856 [Test worker] JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Jonny/Desktop/corda/samples-kotlin/Advanced/negotiation-cordapp/workflows/build/mock-network/20210315-214455.174-489E42A2EAEC62B9/nodes/3/cordapps/contracts-0.2.jar
[INFO ] 22:45:14.864 [Test worker] JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Jonny/Desktop/corda/samples-kotlin/Advanced/negotiation-cordapp/workflows/build/mock-network/20210315-214455.174-489E42A2EAEC62B9/nodes/3/cordapps/workflows-0.2.jar
[INFO ] 22:45:14.882 [Test worker] InternalMockNetwork$MockNode. - MessagingService active change to: false
[INFO ] 22:45:14.882 [Test worker] InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads
[INFO ] 22:45:14.883 [Test worker] InternalMockNetwork$MockNode. - Node starting up ...
[INFO ] 22:45:14.901 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.AddItineraryFlow$Initiator to initiate net.corda.samples.negotiation.flows.AddItineraryFlow$Responder (version 1)
[INFO ] 22:45:14.901 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.ArrivalFlow$Initiator to initiate net.corda.samples.negotiation.flows.ArrivalFlow$Responder (version 1)
[INFO ] 22:45:14.901 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.CompleteFlow$Initiator to initiate net.corda.samples.negotiation.flows.CompleteFlow$Responder (version 1)
[INFO ] 22:45:14.901 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.NoticeFlow$Initiator to initiate net.corda.samples.negotiation.flows.NoticeFlow$Responder (version 1)
[INFO ] 22:45:14.901 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.OrderFlow$Initiator to initiate net.corda.samples.negotiation.flows.OrderFlow$Responder (version 1)
[INFO ] 22:45:14.901 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.UpdateFlow$Initiator to initiate net.corda.samples.negotiation.flows.UpdateFlow$Responder (version 1)
[INFO ] 22:45:14.904 [Test worker] InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-03-15T21:44:55.116Z
      epoch=1
  }
[INFO ] 22:45:14.904 [Test worker] HikariDataSource. - HikariPool-4 - Starting...
[INFO ] 22:45:14.911 [Test worker] HikariDataSource. - HikariPool-4 - Start completed.
[INFO ] 22:45:15.034 [Test worker] JdbcExecutor. - SELECT MD5SUM FROM PUBLIC.DATABASECHANGELOG WHERE MD5SUM IS NOT NULL
[INFO ] 22:45:15.035 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:15.035 [Test worker] StandardChangeLogHistoryService. - Reading from PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:15.035 [Test worker] JdbcExecutor. - SELECT * FROM PUBLIC.DATABASECHANGELOG ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC
[INFO ] 22:45:15.036 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 22:45:15.036 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 22:45:15.056 [Test worker] JdbcExecutor. - SELECT LOCKED FROM PUBLIC.DATABASECHANGELOGLOCK WHERE ID=1
[INFO ] 22:45:15.057 [Test worker] StandardLockService. - Successfully acquired change log lock
[INFO ] 22:45:15.059 [Test worker] JdbcExecutor. - DROP TABLE PUBLIC.node_checkpoints
[INFO ] 22:45:15.059 [Test worker] ChangeSet. - Table node_checkpoints dropped
[INFO ] 22:45:15.059 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_checkpoints (flow_id NVARCHAR(64) NOT NULL, status INT NOT NULL, compatible BOOLEAN NOT NULL, progress_step NVARCHAR(256), flow_io_request NVARCHAR(128), timestamp TIMESTAMP NOT NULL)
[INFO ] 22:45:15.060 [Test worker] ChangeSet. - Table node_checkpoints created
[INFO ] 22:45:15.060 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_checkpoints_table::R3.Corda ran successfully in 1ms
[INFO ] 22:45:15.060 [Test worker] JdbcExecutor. - SELECT MAX(ORDEREXECUTED) FROM PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:15.061 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_checkpoints_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 94, '8:cc00474f248a40e330cf0f42c5b7e1a6', 'dropTable tableName=node_checkpoints; createTable tableName=node_checkpoints', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844715057')
[INFO ] 22:45:15.061 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_checkpoint_blobs (flow_id NVARCHAR(64) NOT NULL, checkpoint_value BLOB NOT NULL, flow_state BLOB, timestamp TIMESTAMP NOT NULL, hmac VARBINARY(32) NOT NULL)
[INFO ] 22:45:15.061 [Test worker] ChangeSet. - Table node_checkpoint_blobs created
[INFO ] 22:45:15.061 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_checkpoint_blob_table::R3.Corda ran successfully in 0ms
[INFO ] 22:45:15.062 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_checkpoint_blob_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 95, '8:e973d6b794fe4753423964b13fe9fbe6', 'createTable tableName=node_checkpoint_blobs', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844715057')
[INFO ] 22:45:15.062 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_flow_results (flow_id NVARCHAR(64) NOT NULL, result_value BLOB, timestamp TIMESTAMP NOT NULL)
[INFO ] 22:45:15.063 [Test worker] ChangeSet. - Table node_flow_results created
[INFO ] 22:45:15.063 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_flow_result_table::R3.Corda ran successfully in 1ms
[INFO ] 22:45:15.063 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_flow_result_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 96, '8:79f1c80610f26db24d6ab757f57e68b7', 'createTable tableName=node_flow_results', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844715057')
[INFO ] 22:45:15.064 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_flow_exceptions (flow_id NVARCHAR(64) NOT NULL, type NVARCHAR(256) NOT NULL, exception_message NVARCHAR(2000), stack_trace NVARCHAR(2000) NOT NULL, exception_value BLOB, timestamp TIMESTAMP NOT NULL)
[INFO ] 22:45:15.064 [Test worker] ChangeSet. - Table node_flow_exceptions created
[INFO ] 22:45:15.064 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_flow_exceptions_table::R3.Corda ran successfully in 1ms
[INFO ] 22:45:15.064 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_flow_exceptions_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 97, '8:fb0d523c5cf42025c566f105731b34a2', 'createTable tableName=node_flow_exceptions', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844715057')
[INFO ] 22:45:15.065 [Test worker] JdbcExecutor. - CREATE TABLE PUBLIC.node_flow_metadata (flow_id NVARCHAR(64) NOT NULL, invocation_id NVARCHAR(128) NOT NULL, flow_name NVARCHAR(128) NOT NULL, flow_identifier NVARCHAR(512), started_type INT NOT NULL, flow_parameters BLOB NOT NULL, cordapp_name NVARCHAR(128) NOT NULL, platform_version INT NOT NULL, started_by NVARCHAR(128) NOT NULL, invocation_time TIMESTAMP NOT NULL, start_time TIMESTAMP NOT NULL, finish_time TIMESTAMP)
[INFO ] 22:45:15.065 [Test worker] ChangeSet. - Table node_flow_metadata created
[INFO ] 22:45:15.065 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_flow_metadata_table::R3.Corda ran successfully in 0ms
[INFO ] 22:45:15.066 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_flow_metadata_table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 98, '8:edede3ddf0425fb6d012735a7415013e', 'createTable tableName=node_flow_metadata', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844715057')
[INFO ] 22:45:15.066 [Test worker] JdbcExecutor. - ALTER TABLE PUBLIC.node_checkpoints ADD CONSTRAINT node_checkpoints_pk PRIMARY KEY (flow_id)
[INFO ] 22:45:15.067 [Test worker] ChangeSet. - Primary key added to node_checkpoints (flow_id)
[INFO ] 22:45:15.067 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_checkpoint_schema_primary_keys-h2_postgres_oracle::R3.Corda ran successfully in 1ms
[INFO ] 22:45:15.067 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_checkpoint_schema_primary_keys-h2_postgres_oracle', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 99, '8:23141f3e3b5917c1cd0196f7b03b8f71', 'addPrimaryKey constraintName=node_checkpoints_pk, tableName=node_checkpoints', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844715057')
[INFO ] 22:45:15.068 [Test worker] JdbcExecutor. - CREATE UNIQUE INDEX PUBLIC.node_checkpoint_blobs_idx ON PUBLIC.node_checkpoint_blobs(flow_id)
[INFO ] 22:45:15.068 [Test worker] ChangeSet. - Index node_checkpoint_blobs_idx created
[INFO ] 22:45:15.068 [Test worker] JdbcExecutor. - CREATE UNIQUE INDEX PUBLIC.node_flow_results_idx ON PUBLIC.node_flow_results(flow_id)
[INFO ] 22:45:15.069 [Test worker] ChangeSet. - Index node_flow_results_idx created
[INFO ] 22:45:15.069 [Test worker] JdbcExecutor. - CREATE UNIQUE INDEX PUBLIC.node_flow_exceptions_idx ON PUBLIC.node_flow_exceptions(flow_id)
[INFO ] 22:45:15.069 [Test worker] ChangeSet. - Index node_flow_exceptions_idx created
[INFO ] 22:45:15.069 [Test worker] JdbcExecutor. - CREATE UNIQUE INDEX PUBLIC.node_flow_metadata_idx ON PUBLIC.node_flow_metadata(flow_id)
[INFO ] 22:45:15.069 [Test worker] ChangeSet. - Index node_flow_metadata_idx created
[INFO ] 22:45:15.069 [Test worker] ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_new_checkpoint_schema_indexes::R3.Corda ran successfully in 1ms
[INFO ] 22:45:15.070 [Test worker] JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_new_checkpoint_schema_indexes', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 100, '8:56612ddd39f61523990e27c1b429f467', 'createIndex indexName=node_checkpoint_blobs_idx, tableName=node_checkpoint_blobs; createIndex indexName=node_flow_results_idx, tableName=node_flow_results; createIndex indexName=node_flow_exceptions_idx, tableName=node_flow_exceptions; createIndex...', '', 'EXECUTED', NULL, NULL, '3.6.3', '5844715057')
[INFO ] 22:45:15.071 [Test worker] StandardLockService. - Successfully released change log lock
[INFO ] 22:45:15.077 [Test worker] JdbcExecutor. - SELECT MD5SUM FROM PUBLIC.DATABASECHANGELOG WHERE MD5SUM IS NOT NULL
[INFO ] 22:45:15.077 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:15.077 [Test worker] StandardChangeLogHistoryService. - Reading from PUBLIC.DATABASECHANGELOG
[INFO ] 22:45:15.077 [Test worker] JdbcExecutor. - SELECT * FROM PUBLIC.DATABASECHANGELOG ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC
[INFO ] 22:45:15.078 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 22:45:15.078 [Test worker] JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 22:45:15.078 [Test worker] JdbcExecutor. - SELECT LOCKED FROM PUBLIC.DATABASECHANGELOGLOCK WHERE ID=1
[INFO ] 22:45:15.079 [Test worker] StandardLockService. - Successfully acquired change log lock
[INFO ] 22:45:15.079 [Test worker] StandardLockService. - Successfully released change log lock
[INFO ] 22:45:15.080 [Test worker] InternalMockNetwork$MockNode. - Connected to H2 database.
[INFO ] 22:45:15.081 [Test worker] HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)]
[INFO ] 22:45:15.081 [Test worker] BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)]
[INFO ] 22:45:15.086 [Test worker] ConnectionProviderInitiator. - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[INFO ] 22:45:15.086 [Test worker] Dialect. - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[INFO ] 22:45:15.138 [Test worker] access. - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4cc281e3] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[INFO ] 22:45:15.162 [Test worker] JtaPlatformInitiator. - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 22:45:15.162 [Test worker] BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)]
[INFO ] 22:45:15.163 [Test worker] InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key!
[INFO ] 22:45:15.175 [Test worker] InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null
[INFO ] 22:45:15.175 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1615844715175)
[INFO ] 22:45:15.176 [Test worker] PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB
[INFO ] 22:45:15.180 [Test worker] InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1615844715175)
[INFO ] 22:45:15.184 [Test worker] NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations]
[INFO ] 22:45:15.184 [Test worker] MockNodeMessagingService. - Status change to true
[INFO ] 22:45:15.184 [Test worker] InternalMockNetwork$MockNode. - MessagingService active change to: true
[INFO ] 22:45:15.187 [MockNode-4-2] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1615844715175)
[INFO ] 22:45:15.190 [MockNode-4-2] PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing
[INFO ] 22:45:15.201 [Test worker] ClassloaderUtils. - Contracts loading for 'C:\Users\Jonny\AppData\Local\Temp\attachment9109799408678418028.jar' took 3 msec
[INFO ] 22:45:15.207 [Test worker] NodeAttachmentService. - Stored new attachment: id=0A89502481217851863D1A8DEDA12245F6AE0F484316901FA4A59602103E3596 uploader=app filename=Negotiation CorDapp
[INFO ] 22:45:15.218 [Test worker] SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1615844715175)
[INFO ] 22:45:15.218 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1615844713069)
[INFO ] 22:45:15.219 [Test worker] PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH
[INFO ] 22:45:15.225 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1615844715175)
[INFO ] 22:45:15.225 [Test worker] PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB
[INFO ] 22:45:15.231 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1615844714224)
[INFO ] 22:45:15.232 [Test worker] PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB
[INFO ] 22:45:15.237 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1615844715175)
[INFO ] 22:45:15.238 [Test worker] PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB
[INFO ] 22:45:15.243 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1615844714752)
[INFO ] 22:45:15.243 [Test worker] PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB
[INFO ] 22:45:15.248 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1615844715175)
[INFO ] 22:45:15.249 [Test worker] PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB
[INFO ] 22:45:15.254 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1615844715175)
[INFO ] 22:45:15.254 [Test worker] PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing
[INFO ] 22:45:15.254 [Test worker] PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1615844715175)
[INFO ] 22:45:15.254 [Test worker] PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing
[WARN ] 22:45:15.255 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.OrderFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.OrderFlow$Responder
[INFO ] 22:45:15.255 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.OrderFlow$Initiator to initiate net.corda.samples.negotiation.flows.OrderFlow$Responder (version 1)
[WARN ] 22:45:15.258 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.NoticeFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.NoticeFlow$Responder
[INFO ] 22:45:15.258 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.NoticeFlow$Initiator to initiate net.corda.samples.negotiation.flows.NoticeFlow$Responder (version 1)
[WARN ] 22:45:15.258 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.AddItineraryFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.AddItineraryFlow$Responder
[INFO ] 22:45:15.258 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.AddItineraryFlow$Initiator to initiate net.corda.samples.negotiation.flows.AddItineraryFlow$Responder (version 1)
[WARN ] 22:45:15.258 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.UpdateFlow$Responder
[INFO ] 22:45:15.258 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.UpdateFlow$Initiator to initiate net.corda.samples.negotiation.flows.UpdateFlow$Responder (version 1)
[WARN ] 22:45:15.258 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.ArrivalFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.ArrivalFlow$Responder
[INFO ] 22:45:15.258 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.ArrivalFlow$Initiator to initiate net.corda.samples.negotiation.flows.ArrivalFlow$Responder (version 1)
[WARN ] 22:45:15.258 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.CompleteFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.CompleteFlow$Responder
[INFO ] 22:45:15.258 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.CompleteFlow$Initiator to initiate net.corda.samples.negotiation.flows.CompleteFlow$Responder (version 1)
[WARN ] 22:45:15.258 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.OrderFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.OrderFlow$Responder
[INFO ] 22:45:15.258 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.OrderFlow$Initiator to initiate net.corda.samples.negotiation.flows.OrderFlow$Responder (version 1)
[WARN ] 22:45:15.258 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.NoticeFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.NoticeFlow$Responder
[INFO ] 22:45:15.258 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.NoticeFlow$Initiator to initiate net.corda.samples.negotiation.flows.NoticeFlow$Responder (version 1)
[WARN ] 22:45:15.258 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.AddItineraryFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.AddItineraryFlow$Responder
[INFO ] 22:45:15.258 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.AddItineraryFlow$Initiator to initiate net.corda.samples.negotiation.flows.AddItineraryFlow$Responder (version 1)
[WARN ] 22:45:15.258 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.UpdateFlow$Responder
[INFO ] 22:45:15.258 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.UpdateFlow$Initiator to initiate net.corda.samples.negotiation.flows.UpdateFlow$Responder (version 1)
[WARN ] 22:45:15.258 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.ArrivalFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.ArrivalFlow$Responder
[INFO ] 22:45:15.258 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.ArrivalFlow$Initiator to initiate net.corda.samples.negotiation.flows.ArrivalFlow$Responder (version 1)
[WARN ] 22:45:15.258 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.CompleteFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.CompleteFlow$Responder
[INFO ] 22:45:15.258 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.CompleteFlow$Initiator to initiate net.corda.samples.negotiation.flows.CompleteFlow$Responder (version 1)
[WARN ] 22:45:15.258 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.OrderFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.OrderFlow$Responder
[INFO ] 22:45:15.258 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.OrderFlow$Initiator to initiate net.corda.samples.negotiation.flows.OrderFlow$Responder (version 1)
[WARN ] 22:45:15.258 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.NoticeFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.NoticeFlow$Responder
[INFO ] 22:45:15.258 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.NoticeFlow$Initiator to initiate net.corda.samples.negotiation.flows.NoticeFlow$Responder (version 1)
[WARN ] 22:45:15.258 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.AddItineraryFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.AddItineraryFlow$Responder
[INFO ] 22:45:15.258 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.AddItineraryFlow$Initiator to initiate net.corda.samples.negotiation.flows.AddItineraryFlow$Responder (version 1)
[WARN ] 22:45:15.259 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.UpdateFlow$Responder
[INFO ] 22:45:15.259 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.UpdateFlow$Initiator to initiate net.corda.samples.negotiation.flows.UpdateFlow$Responder (version 1)
[WARN ] 22:45:15.259 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.ArrivalFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.ArrivalFlow$Responder
[INFO ] 22:45:15.259 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.ArrivalFlow$Initiator to initiate net.corda.samples.negotiation.flows.ArrivalFlow$Responder (version 1)
[WARN ] 22:45:15.259 [Test worker] NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.negotiation.flows.CompleteFlow$Initiator, currently using: class net.corda.samples.negotiation.flows.CompleteFlow$Responder
[INFO ] 22:45:15.259 [Test worker] NodeFlowManager. - Registered net.corda.samples.negotiation.flows.CompleteFlow$Initiator to initiate net.corda.samples.negotiation.flows.CompleteFlow$Responder (version 1)
[WARN ] 22:45:15.428 [Mock network] TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1.
[WARN ] 22:45:15.428 [Mock network] TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.samples.negotiation.contracts.OrderAndTransContract
[INFO ] 22:45:15.842 [Mock network] flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB.
[INFO ] 22:45:15.875 [Mock network] flow. - Transaction dependencies resolution completed.
[INFO ] 22:45:16.058 [Mock network] flow. - No need to notarise this transaction.
[INFO ] 22:45:16.058 [Mock network] flow. - Recording transaction locally.
[INFO ] 22:45:16.114 [Mock network] flow. - Recorded transaction locally successfully.
[INFO ] 22:45:16.132 [Mock network] flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB.
[INFO ] 22:45:16.139 [Mock network] flow. - Transaction dependencies resolution completed.
[INFO ] 22:45:16.142 [Mock network] flow. - Successfully received fully signed tx. Sending it to the vault for processing.
[INFO ] 22:45:16.147 [Mock network] flow. - Successfully recorded received transaction locally.
[INFO ] 22:45:16.164 [Mock network] flow. - Party O=Mock Company 2, L=London, C=GB received the transaction.
[INFO ] 22:45:16.164 [Mock network] flow. - All parties received the transaction successfully.
[INFO ] 22:45:16.247 [Mock network] flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB.
[INFO ] 22:45:16.358 [Mock network] flow. - Transaction dependencies resolution completed.
[INFO ] 22:45:16.405 [Mock network] flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB.
[INFO ] 22:45:16.411 [Mock network] flow. - Transaction dependencies resolution completed.
[INFO ] 22:45:16.461 [Mock network] flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH.
[INFO ] 22:45:16.497 [Mock network] flow. - Received a notarisation request for Tx [6BB8A0C2EB5EFF7134738A077DE67D253018BB7F18A5015BDAFC5B8836D51C01] from [O=Mock Company 2, L=London, C=GB]
[INFO ] 22:45:16.621 [Notary request queue processor] JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references
[INFO ] 22:45:16.644 [Mock network] flow. - Transaction [6BB8A0C2EB5EFF7134738A077DE67D253018BB7F18A5015BDAFC5B8836D51C01] successfully notarised, sending signature back to [O=Mock Company 2, L=London, C=GB]
[INFO ] 22:45:16.689 [Mock network] flow. - Notary responded (O=Notary Service, L=Zurich, C=CH).
[INFO ] 22:45:16.689 [Mock network] flow. - Recording transaction locally.
[INFO ] 22:45:16.696 [Mock network] flow. - Recorded transaction locally successfully.
[INFO ] 22:45:16.703 [Mock network] flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB.
[INFO ] 22:45:16.707 [Mock network] flow. - Transaction dependencies resolution completed.
[INFO ] 22:45:16.711 [Mock network] flow. - Successfully received fully signed tx. Sending it to the vault for processing.
[INFO ] 22:45:16.715 [Mock network] flow. - Successfully recorded received transaction locally.
[INFO ] 22:45:16.722 [Mock network] flow. - Party O=Mock Company 3, L=London, C=GB received the transaction.
[INFO ] 22:45:16.728 [Mock network] flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB.
[INFO ] 22:45:16.733 [Mock network] flow. - Transaction dependencies resolution completed.
[INFO ] 22:45:16.741 [Mock network] flow. - Successfully received fully signed tx. Sending it to the vault for processing.
[INFO ] 22:45:16.747 [Mock network] flow. - Successfully recorded received transaction locally.
[INFO ] 22:45:16.753 [Mock network] flow. - Party O=Mock Company 1, L=London, C=GB received the transaction.
[INFO ] 22:45:16.753 [Mock network] flow. - All parties received the transaction successfully.
[INFO ] 22:45:16.786 [Mock network] flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB.
[INFO ] 22:45:16.791 [Mock network] flow. - Transaction dependencies resolution completed.
[INFO ] 22:45:16.837 [Mock network] flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB.
[INFO ] 22:45:16.842 [Mock network] flow. - Transaction dependencies resolution completed.
[INFO ] 22:45:16.879 [Mock network] flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH.
[INFO ] 22:45:16.891 [Mock network] flow. - Received a notarisation request for Tx [9D3AAA9B069760C428386A3B54C567DBEE060BB56F319E29B20586B538E77188] from [O=Mock Company 3, L=London, C=GB]
[INFO ] 22:45:17.045 [Notary request queue processor] JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references
[INFO ] 22:45:17.047 [Mock network] flow. - Transaction [9D3AAA9B069760C428386A3B54C567DBEE060BB56F319E29B20586B538E77188] successfully notarised, sending signature back to [O=Mock Company 3, L=London, C=GB]
[INFO ] 22:45:17.078 [Mock network] flow. - Notary responded (O=Notary Service, L=Zurich, C=CH).
[INFO ] 22:45:17.078 [Mock network] flow. - Recording transaction locally.
[INFO ] 22:45:17.081 [Mock network] flow. - Recorded transaction locally successfully.
[INFO ] 22:45:17.088 [Mock network] flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB.
[INFO ] 22:45:17.092 [Mock network] flow. - Transaction dependencies resolution completed.
[INFO ] 22:45:17.095 [Mock network] flow. - Successfully received fully signed tx. Sending it to the vault for processing.
[INFO ] 22:45:17.098 [Mock network] flow. - Successfully recorded received transaction locally.
[INFO ] 22:45:17.104 [Mock network] flow. - Party O=Mock Company 2, L=London, C=GB received the transaction.
[INFO ] 22:45:17.110 [Mock network] flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB.
[INFO ] 22:45:17.113 [Mock network] flow. - Transaction dependencies resolution completed.
[INFO ] 22:45:17.116 [Mock network] flow. - Successfully received fully signed tx. Sending it to the vault for processing.
[INFO ] 22:45:17.124 [Mock network] flow. - Successfully recorded received transaction locally.
[INFO ] 22:45:17.129 [Mock network] flow. - Party O=Mock Company 1, L=London, C=GB received the transaction.
[INFO ] 22:45:17.129 [Mock network] flow. - All parties received the transaction successfully.
[INFO ] 22:45:17.156 [Mock network] flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB.
[INFO ] 22:45:17.160 [Mock network] flow. - Transaction dependencies resolution completed.
[INFO ] 22:45:17.176 [Mock network] flow. - Flow raised an error: List is empty.. Sending it to flow hospital to be triaged.
[INFO ] 22:45:17.179 [Mock network] StaffedFlowHospital. - Flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Invocation, sessionId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-2225082697895848056)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1707172792727884341), deduplicationSeed=D-1707172792727884341--810898131451030961)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))]), frozenFiber=AEE0AF701F0780A120DCF602F0ACF5D8D5AB1ED03FE7514D143AE373AC9B0728), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.negotiation.flows.UpdateFlow$Responder@4daa726b, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ab60de], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=5b17c46c-20da-4a4f-9afd-b3ac58f0ba01, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@1d1d0482[Permits = 0])
[INFO ] 22:45:17.180 [Mock network] StaffedFlowHospital. - Error 1 of 1:
java.util.NoSuchElementException: List is empty.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:478) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1.checkTransaction(UpdateFlow.kt:66) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.6.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.6.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:414) ~[corda-core-4.6.jar:?]
	at net.corda.samples.negotiation.flows.UpdateFlow$Responder.call(UpdateFlow.kt:73) ~[main/:?]
	at net.corda.samples.negotiation.flows.UpdateFlow$Responder.call(UpdateFlow.kt:60) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
[INFO ] 22:45:17.182 [Mock network] StaffedFlowHospital. - Flow error allowed to propagate
java.util.NoSuchElementException: List is empty.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:478) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1.checkTransaction(UpdateFlow.kt:66) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.6.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.6.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:414) ~[corda-core-4.6.jar:?]
	at net.corda.samples.negotiation.flows.UpdateFlow$Responder.call(UpdateFlow.kt:73) ~[main/:?]
	at net.corda.samples.negotiation.flows.UpdateFlow$Responder.call(UpdateFlow.kt:60) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
[WARN ] 22:45:17.199 [Mock network] DumpHistoryOnErrorInterceptor. - Flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] errored, dumping all transitions:

 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.149Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[77e7ffde-6e4a-4e28-9d42-2732c7e32649], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Invocation, sessionId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=B4E5F8B8856F42FC683343905B17BC81CC7F5E7407FF99657EDFA09190824A1C), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@25ca7bd7])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@25ca7bd7])
    SignalFlowHasStarted(flowId=[77e7ffde-6e4a-4e28-9d42-2732c7e32649])
    SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1707172792727884341), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-2225082697895848056), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-1707172792727884341--810898131451030961-0-0), senderUUID=5b17c46c-20da-4a4f-9afd-b3ac58f0ba01))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-2225082697895848056): 
    null
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1707172792727884341), deduplicationSeed=D-1707172792727884341--810898131451030961)
checkpoint.timestamp: 
    2021-03-15T21:45:17.147Z
    2021-03-15T21:45:17.148Z
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@25ca7bd7]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.151Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.148Z
    2021-03-15T21:45:17.151Z


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.151Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.154Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))]), maySkipCheckpoint=false, fiber=00D00FFD74D0C21F2A6F9B10B1452D6A3D81CCACCBCEFF100C2FCFF83DBEF295, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[77e7ffde-6e4a-4e28-9d42-2732c7e32649], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Invocation, sessionId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-2225082697895848056)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1707172792727884341), deduplicationSeed=D-1707172792727884341--810898131451030961)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))]), frozenFiber=00D00FFD74D0C21F2A6F9B10B1452D6A3D81CCACCBCEFF100C2FCFF83DBEF295), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=B4E5F8B8856F42FC683343905B17BC81CC7F5E7407FF99657EDFA09190824A1C)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))]), frozenFiber=00D00FFD74D0C21F2A6F9B10B1452D6A3D81CCACCBCEFF100C2FCFF83DBEF295)
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.timestamp: 
    2021-03-15T21:45:17.151Z
    2021-03-15T21:45:17.152Z
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.154Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-2225082697895848056).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
checkpoint.timestamp: 
    2021-03-15T21:45:17.152Z
    2021-03-15T21:45:17.154Z
isFlowResumed: 
    false
    true


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.156Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.154Z
    2021-03-15T21:45:17.156Z


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.156Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.156Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.156Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.157Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.157Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.156Z
    2021-03-15T21:45:17.157Z


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.157Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.160Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=231096F20FBF00D7E2A66CD887180F90BAA2B3589FF3C6D02B24F7F67CE081E4, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[77e7ffde-6e4a-4e28-9d42-2732c7e32649], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Invocation, sessionId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-2225082697895848056)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1707172792727884341), deduplicationSeed=D-1707172792727884341--810898131451030961)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=231096F20FBF00D7E2A66CD887180F90BAA2B3589FF3C6D02B24F7F67CE081E4), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    00D00FFD74D0C21F2A6F9B10B1452D6A3D81CCACCBCEFF100C2FCFF83DBEF295
    231096F20FBF00D7E2A66CD887180F90BAA2B3589FF3C6D02B24F7F67CE081E4
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.timestamp: 
    2021-03-15T21:45:17.157Z
    2021-03-15T21:45:17.158Z
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.160Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1707172792727884341), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-1707172792727884341--810898131451030961-2-0), senderUUID=5b17c46c-20da-4a4f-9afd-b3ac58f0ba01))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.160Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.163Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.160Z
    2021-03-15T21:45:17.163Z


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.165Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))]), maySkipCheckpoint=false, fiber=AEE0AF701F0780A120DCF602F0ACF5D8D5AB1ED03FE7514D143AE373AC9B0728, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[77e7ffde-6e4a-4e28-9d42-2732c7e32649], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Invocation, sessionId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-2225082697895848056)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1707172792727884341), deduplicationSeed=D-1707172792727884341--810898131451030961)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))]), frozenFiber=AEE0AF701F0780A120DCF602F0ACF5D8D5AB1ED03FE7514D143AE373AC9B0728), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))])
checkpoint.flowState.frozenFiber.hash: 
    231096F20FBF00D7E2A66CD887180F90BAA2B3589FF3C6D02B24F7F67CE081E4
    AEE0AF701F0780A120DCF602F0ACF5D8D5AB1ED03FE7514D143AE373AC9B0728
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.timestamp: 
    2021-03-15T21:45:17.163Z
    2021-03-15T21:45:17.164Z
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.165Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.173Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-2225082697895848056), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ab60de, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-2225082697895848056).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.165Z
    2021-03-15T21:45:17.173Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ab60de]


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.173Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-2225082697895848056).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.176Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.173Z
    2021-03-15T21:45:17.176Z


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.183Z
  Event: Error(exception=java.util.NoSuchElementException: List is empty., rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-4652315064329695472, exception=java.util.NoSuchElementException: List is empty.)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2021-03-15T21:45:17.176Z
    2021-03-15T21:45:17.178Z
isFlowResumed: 
    true
    false


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.185Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.186Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-03-15T21:45:17.178Z
    2021-03-15T21:45:17.186Z

[WARN ] 22:45:17.199 [Mock network] DumpHistoryOnErrorInterceptor. - Flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] error
java.util.NoSuchElementException: List is empty.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:478) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1.checkTransaction(UpdateFlow.kt:66) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.6.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.6.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:414) ~[corda-core-4.6.jar:?]
	at net.corda.samples.negotiation.flows.UpdateFlow$Responder.call(UpdateFlow.kt:73) ~[main/:?]
	at net.corda.samples.negotiation.flows.UpdateFlow$Responder.call(UpdateFlow.kt:60) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
[WARN ] 22:45:17.200 [Mock network] ActionExecutorImpl. - Propagating error
[WARN ] 22:45:17.263 [Mock network] DumpHistoryOnErrorInterceptor. - Flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] errored, dumping all transitions:

 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.149Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[77e7ffde-6e4a-4e28-9d42-2732c7e32649], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Invocation, sessionId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=B4E5F8B8856F42FC683343905B17BC81CC7F5E7407FF99657EDFA09190824A1C), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@25ca7bd7])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@25ca7bd7])
    SignalFlowHasStarted(flowId=[77e7ffde-6e4a-4e28-9d42-2732c7e32649])
    SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1707172792727884341), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-2225082697895848056), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-1707172792727884341--810898131451030961-0-0), senderUUID=5b17c46c-20da-4a4f-9afd-b3ac58f0ba01))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-2225082697895848056): 
    null
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1707172792727884341), deduplicationSeed=D-1707172792727884341--810898131451030961)
checkpoint.timestamp: 
    2021-03-15T21:45:17.147Z
    2021-03-15T21:45:17.148Z
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@25ca7bd7]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.151Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.148Z
    2021-03-15T21:45:17.151Z


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.151Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.154Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))]), maySkipCheckpoint=false, fiber=00D00FFD74D0C21F2A6F9B10B1452D6A3D81CCACCBCEFF100C2FCFF83DBEF295, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[77e7ffde-6e4a-4e28-9d42-2732c7e32649], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Invocation, sessionId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-2225082697895848056)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1707172792727884341), deduplicationSeed=D-1707172792727884341--810898131451030961)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))]), frozenFiber=00D00FFD74D0C21F2A6F9B10B1452D6A3D81CCACCBCEFF100C2FCFF83DBEF295), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=B4E5F8B8856F42FC683343905B17BC81CC7F5E7407FF99657EDFA09190824A1C)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))]), frozenFiber=00D00FFD74D0C21F2A6F9B10B1452D6A3D81CCACCBCEFF100C2FCFF83DBEF295)
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.timestamp: 
    2021-03-15T21:45:17.151Z
    2021-03-15T21:45:17.152Z
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.154Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-2225082697895848056).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
checkpoint.timestamp: 
    2021-03-15T21:45:17.152Z
    2021-03-15T21:45:17.154Z
isFlowResumed: 
    false
    true


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.156Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.154Z
    2021-03-15T21:45:17.156Z


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.156Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.156Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.156Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.157Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.157Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.156Z
    2021-03-15T21:45:17.157Z


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.157Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.160Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=231096F20FBF00D7E2A66CD887180F90BAA2B3589FF3C6D02B24F7F67CE081E4, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[77e7ffde-6e4a-4e28-9d42-2732c7e32649], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Invocation, sessionId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-2225082697895848056)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1707172792727884341), deduplicationSeed=D-1707172792727884341--810898131451030961)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=231096F20FBF00D7E2A66CD887180F90BAA2B3589FF3C6D02B24F7F67CE081E4), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    00D00FFD74D0C21F2A6F9B10B1452D6A3D81CCACCBCEFF100C2FCFF83DBEF295
    231096F20FBF00D7E2A66CD887180F90BAA2B3589FF3C6D02B24F7F67CE081E4
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.timestamp: 
    2021-03-15T21:45:17.157Z
    2021-03-15T21:45:17.158Z
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.160Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1707172792727884341), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-1707172792727884341--810898131451030961-2-0), senderUUID=5b17c46c-20da-4a4f-9afd-b3ac58f0ba01))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.160Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.163Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.160Z
    2021-03-15T21:45:17.163Z


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.165Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))]), maySkipCheckpoint=false, fiber=AEE0AF701F0780A120DCF602F0ACF5D8D5AB1ED03FE7514D143AE373AC9B0728, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[77e7ffde-6e4a-4e28-9d42-2732c7e32649], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Invocation, sessionId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-2225082697895848056)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1707172792727884341), deduplicationSeed=D-1707172792727884341--810898131451030961)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))]), frozenFiber=AEE0AF701F0780A120DCF602F0ACF5D8D5AB1ED03FE7514D143AE373AC9B0728), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))])
checkpoint.flowState.frozenFiber.hash: 
    231096F20FBF00D7E2A66CD887180F90BAA2B3589FF3C6D02B24F7F67CE081E4
    AEE0AF701F0780A120DCF602F0ACF5D8D5AB1ED03FE7514D143AE373AC9B0728
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.timestamp: 
    2021-03-15T21:45:17.163Z
    2021-03-15T21:45:17.164Z
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.165Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.173Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-2225082697895848056), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ab60de, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-2225082697895848056).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.165Z
    2021-03-15T21:45:17.173Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ab60de]


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.173Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-2225082697895848056).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.176Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.173Z
    2021-03-15T21:45:17.176Z


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.183Z
  Event: Error(exception=java.util.NoSuchElementException: List is empty., rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-4652315064329695472, exception=java.util.NoSuchElementException: List is empty.)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2021-03-15T21:45:17.176Z
    2021-03-15T21:45:17.178Z
isFlowResumed: 
    true
    false


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.185Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.186Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-03-15T21:45:17.178Z
    2021-03-15T21:45:17.186Z


 --- Transition of flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] ---
  Timestamp: 2021-03-15T21:45:17.259Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-4652315064329695472)], sessions=[Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1707172792727884341), deduplicationSeed=D-1707172792727884341--810898131451030961)], senderUUID=5b17c46c-20da-4a4f-9afd-b3ac58f0ba01)
    CreateTransaction
    RemoveCheckpoint(id=[77e7ffde-6e4a-4e28-9d42-2732c7e32649], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ab60de])
    ReleaseSoftLocks(uuid=77e7ffde-6e4a-4e28-9d42-2732c7e32649)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ab60de])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-2225082697895848056)])
    RemoveFlow(flowId=[77e7ffde-6e4a-4e28-9d42-2732c7e32649], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-4652315064329695472, exception=java.util.NoSuchElementException: List is empty.)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Invocation, sessionId=f6ddb43a-3176-4aeb-bd52-2f5a3a92722e, timestamp: 2021-03-15T21:45:17.147Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-2225082697895848056)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1707172792727884341), deduplicationSeed=D-1707172792727884341--810898131451030961)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Responder, subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=5), flowState=net.corda.node.services.statemachine.FlowState$Finished@604d7531, errorState=Errored(errors=[FlowError(errorId=-4652315064329695472, exception=java.util.NoSuchElementException: List is empty.)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.negotiation.flows.UpdateFlow$Responder@4daa726b, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=5b17c46c-20da-4a4f-9afd-b3ac58f0ba01, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@1d1d0482[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-2225082697895848056))]), frozenFiber=AEE0AF701F0780A120DCF602F0ACF5D8D5AB1ED03FE7514D143AE373AC9B0728)
    net.corda.node.services.statemachine.FlowState$Finished@604d7531
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.timestamp: 
    2021-03-15T21:45:17.186Z
    2021-03-15T21:45:17.200Z
checkpoint.status: 
    RUNNABLE
    FAILED
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ab60de]
    []
isRemoved: 
    false
    true

[WARN ] 22:45:17.263 [Mock network] DumpHistoryOnErrorInterceptor. - Flow [77e7ffde-6e4a-4e28-9d42-2732c7e32649] error
java.util.NoSuchElementException: List is empty.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:478) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.samples.negotiation.flows.UpdateFlow$Responder$call$signTransactionFlow$1.checkTransaction(UpdateFlow.kt:66) ~[main/:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:293) ~[corda-core-4.6.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.6.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:414) ~[corda-core-4.6.jar:?]
	at net.corda.samples.negotiation.flows.UpdateFlow$Responder.call(UpdateFlow.kt:73) ~[main/:?]
	at net.corda.samples.negotiation.flows.UpdateFlow$Responder.call(UpdateFlow.kt:60) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
[INFO ] 22:45:17.265 [Mock network] flow. - Flow raised an error: Counter-flow errored. Sending it to flow hospital to be triaged.
[INFO ] 22:45:17.266 [Mock network] StaffedFlowHospital. - Flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB)), trace=Trace(invocationId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Invocation, sessionId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1707172792727884341)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-2225082697895848056), deduplicationSeed=R-1707172792727884341--810898131451030961)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))]), frozenFiber=C0A7B63B1608B92D6F5B5FCA5CE5F75DEBE85579BDD9C7E2A46349C80BEECEAC), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.negotiation.flows.UpdateFlow$Initiator@2ea3ed89, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@618c5e02], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=fbc9ff9e-7c0e-47b8-8c64-93a240f8b83d, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@1882adc5[Permits = 0])
[INFO ] 22:45:17.266 [Mock network] StaffedFlowHospital. - Error 1 of 1:
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.6.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.6.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.6.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:414) ~[corda-core-4.6.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.6.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.6.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:414) ~[corda-core-4.6.jar:?]
	at net.corda.samples.negotiation.flows.UpdateFlow$Initiator.call(UpdateFlow.kt:52) ~[main/:?]
	at net.corda.samples.negotiation.flows.UpdateFlow$Initiator.call(UpdateFlow.kt:19) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
[INFO ] 22:45:17.266 [Mock network] StaffedFlowHospital. - Flow error allowed to propagate
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.6.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.6.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.6.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:414) ~[corda-core-4.6.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.6.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.6.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:414) ~[corda-core-4.6.jar:?]
	at net.corda.samples.negotiation.flows.UpdateFlow$Initiator.call(UpdateFlow.kt:52) ~[main/:?]
	at net.corda.samples.negotiation.flows.UpdateFlow$Initiator.call(UpdateFlow.kt:19) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
[WARN ] 22:45:17.272 [Mock network] DumpHistoryOnErrorInterceptor. - Flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] errored, dumping all transitions:

 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.134Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB)), trace=Trace(invocationId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Invocation, sessionId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=854DC36850B06EA0C08A528AC2D4039367460CE336752BB14DC456FA3A670A7D), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4bb57e28])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4bb57e28])
    SignalFlowHasStarted(flowId=[1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4bb57e28]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.142Z
  Event: InitiateFlow(destination=O=Mock Company 1, L=London, C=GB, wellKnownParty=O=Mock Company 1, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30], sessionId=SessionId(toLong=1707172792727884341))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1707172792727884341): 
    null
    Uninitiated(destination=O=Mock Company 1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1707172792727884341), additionalEntropy=-810898131451030961)
checkpoint.timestamp: 
    2021-03-15T21:45:17.133Z
    2021-03-15T21:45:17.141Z


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.142Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.141Z
    2021-03-15T21:45:17.142Z


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.143Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.142Z
    2021-03-15T21:45:17.143Z


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.143Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.146Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=9AB962294A8A9628FCEF2194D56C914D79F8272D1751F562C405492E0D0C828A}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=EC4E83B7035AFEC9C5B0ED6CF48BA263E7517090CEDB047DB55721283C830420, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB)), trace=Trace(invocationId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Invocation, sessionId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1707172792727884341)=Uninitiated(destination=O=Mock Company 1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1707172792727884341), additionalEntropy=-810898131451030961)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=9AB962294A8A9628FCEF2194D56C914D79F8272D1751F562C405492E0D0C828A}, shouldRetrySend=false), frozenFiber=EC4E83B7035AFEC9C5B0ED6CF48BA263E7517090CEDB047DB55721283C830420), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=854DC36850B06EA0C08A528AC2D4039367460CE336752BB14DC456FA3A670A7D)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=9AB962294A8A9628FCEF2194D56C914D79F8272D1751F562C405492E0D0C828A}, shouldRetrySend=false), frozenFiber=EC4E83B7035AFEC9C5B0ED6CF48BA263E7517090CEDB047DB55721283C830420)
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.timestamp: 
    2021-03-15T21:45:17.143Z
    2021-03-15T21:45:17.145Z
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.146Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 1, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=1707172792727884341), initiationEntropy=-810898131451030961, initiatorFlowClassName=net.corda.samples.negotiation.flows.UpdateFlow$Initiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1707172792727884341--810898131451030961-1-0), senderUUID=fbc9ff9e-7c0e-47b8-8c64-93a240f8b83d))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=9AB962294A8A9628FCEF2194D56C914D79F8272D1751F562C405492E0D0C828A}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))])
checkpoint.checkpointState.sessions.SessionId(toLong=1707172792727884341): 
    Uninitiated(destination=O=Mock Company 1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1707172792727884341), additionalEntropy=-810898131451030961)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1707172792727884341--810898131451030961)
checkpoint.timestamp: 
    2021-03-15T21:45:17.145Z
    2021-03-15T21:45:17.146Z


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.166Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1707172792727884341), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-2225082697895848056), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3b720a16, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1707172792727884341): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1707172792727884341--810898131451030961)
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2225082697895848056), deduplicationSeed=R-1707172792727884341--810898131451030961)
checkpoint.timestamp: 
    2021-03-15T21:45:17.146Z
    2021-03-15T21:45:17.166Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3b720a16]


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.166Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.166Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1707172792727884341), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@388d2f34, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1707172792727884341).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3b720a16]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3b720a16, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@388d2f34]


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.166Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1707172792727884341).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.167Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.166Z
    2021-03-15T21:45:17.167Z


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.169Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=DDDA016BAF6B2F734FB655022CAAACEAA1355663331477BDB518BA3DD3A856D4}), maySkipCheckpoint=false, fiber=F88A34121EFB48C41C2E780A120ABC8CC09056736BE0178CDAEE11751A1096B9, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB)), trace=Trace(invocationId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Invocation, sessionId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1707172792727884341)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2225082697895848056), deduplicationSeed=R-1707172792727884341--810898131451030961)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=DDDA016BAF6B2F734FB655022CAAACEAA1355663331477BDB518BA3DD3A856D4}), frozenFiber=F88A34121EFB48C41C2E780A120ABC8CC09056736BE0178CDAEE11751A1096B9), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3b720a16, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@388d2f34])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3b720a16, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@388d2f34])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=DDDA016BAF6B2F734FB655022CAAACEAA1355663331477BDB518BA3DD3A856D4})
checkpoint.flowState.frozenFiber.hash: 
    EC4E83B7035AFEC9C5B0ED6CF48BA263E7517090CEDB047DB55721283C830420
    F88A34121EFB48C41C2E780A120ABC8CC09056736BE0178CDAEE11751A1096B9
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.timestamp: 
    2021-03-15T21:45:17.167Z
    2021-03-15T21:45:17.168Z
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3b720a16, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@388d2f34]
    []
isFlowResumed: 
    true
    false


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.170Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-2225082697895848056), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1707172792727884341--810898131451030961-2-0), senderUUID=fbc9ff9e-7c0e-47b8-8c64-93a240f8b83d))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.172Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))]), maySkipCheckpoint=false, fiber=C0A7B63B1608B92D6F5B5FCA5CE5F75DEBE85579BDD9C7E2A46349C80BEECEAC, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB)), trace=Trace(invocationId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Invocation, sessionId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1707172792727884341)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2225082697895848056), deduplicationSeed=R-1707172792727884341--810898131451030961)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))]), frozenFiber=C0A7B63B1608B92D6F5B5FCA5CE5F75DEBE85579BDD9C7E2A46349C80BEECEAC), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=DDDA016BAF6B2F734FB655022CAAACEAA1355663331477BDB518BA3DD3A856D4})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))])
checkpoint.flowState.frozenFiber.hash: 
    F88A34121EFB48C41C2E780A120ABC8CC09056736BE0178CDAEE11751A1096B9
    C0A7B63B1608B92D6F5B5FCA5CE5F75DEBE85579BDD9C7E2A46349C80BEECEAC
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.timestamp: 
    2021-03-15T21:45:17.169Z
    2021-03-15T21:45:17.171Z
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.172Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.264Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1707172792727884341), payload=ErrorSessionMessage(flowException=null, errorId=-4652315064329695472)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@618c5e02, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1707172792727884341).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=-4652315064329695472)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.172Z
    2021-03-15T21:45:17.264Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@618c5e02]


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.265Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1707172792727884341).otherSideErrored: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=1707172792727884341).receivedMessages: 
    [ErrorSessionMessage(flowException=null, errorId=-4652315064329695472)]
    []
checkpoint.timestamp: 
    2021-03-15T21:45:17.264Z
    2021-03-15T21:45:17.265Z
isFlowResumed: 
    false
    true


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.265Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.265Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false)]


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.266Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-4652315064329695472, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.266Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.266Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-03-15T21:45:17.265Z
    2021-03-15T21:45:17.266Z

[WARN ] 22:45:17.272 [Mock network] DumpHistoryOnErrorInterceptor. - Flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] error
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.6.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.6.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.6.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:414) ~[corda-core-4.6.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.6.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.6.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:414) ~[corda-core-4.6.jar:?]
	at net.corda.samples.negotiation.flows.UpdateFlow$Initiator.call(UpdateFlow.kt:52) ~[main/:?]
	at net.corda.samples.negotiation.flows.UpdateFlow$Initiator.call(UpdateFlow.kt:19) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
[WARN ] 22:45:17.272 [Mock network] ActionExecutorImpl. - Propagating error
[WARN ] 22:45:17.296 [Mock network] DumpHistoryOnErrorInterceptor. - Flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] errored, dumping all transitions:

 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.134Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB)), trace=Trace(invocationId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Invocation, sessionId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=854DC36850B06EA0C08A528AC2D4039367460CE336752BB14DC456FA3A670A7D), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4bb57e28])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4bb57e28])
    SignalFlowHasStarted(flowId=[1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4bb57e28]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.142Z
  Event: InitiateFlow(destination=O=Mock Company 1, L=London, C=GB, wellKnownParty=O=Mock Company 1, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30], sessionId=SessionId(toLong=1707172792727884341))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1707172792727884341): 
    null
    Uninitiated(destination=O=Mock Company 1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1707172792727884341), additionalEntropy=-810898131451030961)
checkpoint.timestamp: 
    2021-03-15T21:45:17.133Z
    2021-03-15T21:45:17.141Z


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.142Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.141Z
    2021-03-15T21:45:17.142Z


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.143Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.142Z
    2021-03-15T21:45:17.143Z


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.143Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.146Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=9AB962294A8A9628FCEF2194D56C914D79F8272D1751F562C405492E0D0C828A}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=EC4E83B7035AFEC9C5B0ED6CF48BA263E7517090CEDB047DB55721283C830420, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB)), trace=Trace(invocationId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Invocation, sessionId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1707172792727884341)=Uninitiated(destination=O=Mock Company 1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1707172792727884341), additionalEntropy=-810898131451030961)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=9AB962294A8A9628FCEF2194D56C914D79F8272D1751F562C405492E0D0C828A}, shouldRetrySend=false), frozenFiber=EC4E83B7035AFEC9C5B0ED6CF48BA263E7517090CEDB047DB55721283C830420), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=854DC36850B06EA0C08A528AC2D4039367460CE336752BB14DC456FA3A670A7D)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=9AB962294A8A9628FCEF2194D56C914D79F8272D1751F562C405492E0D0C828A}, shouldRetrySend=false), frozenFiber=EC4E83B7035AFEC9C5B0ED6CF48BA263E7517090CEDB047DB55721283C830420)
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.timestamp: 
    2021-03-15T21:45:17.143Z
    2021-03-15T21:45:17.145Z
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.146Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 1, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=1707172792727884341), initiationEntropy=-810898131451030961, initiatorFlowClassName=net.corda.samples.negotiation.flows.UpdateFlow$Initiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1707172792727884341--810898131451030961-1-0), senderUUID=fbc9ff9e-7c0e-47b8-8c64-93a240f8b83d))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=9AB962294A8A9628FCEF2194D56C914D79F8272D1751F562C405492E0D0C828A}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))])
checkpoint.checkpointState.sessions.SessionId(toLong=1707172792727884341): 
    Uninitiated(destination=O=Mock Company 1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1707172792727884341), additionalEntropy=-810898131451030961)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1707172792727884341--810898131451030961)
checkpoint.timestamp: 
    2021-03-15T21:45:17.145Z
    2021-03-15T21:45:17.146Z


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.166Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1707172792727884341), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-2225082697895848056), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3b720a16, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1707172792727884341): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1707172792727884341--810898131451030961)
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2225082697895848056), deduplicationSeed=R-1707172792727884341--810898131451030961)
checkpoint.timestamp: 
    2021-03-15T21:45:17.146Z
    2021-03-15T21:45:17.166Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3b720a16]


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.166Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.166Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1707172792727884341), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@388d2f34, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1707172792727884341).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3b720a16]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3b720a16, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@388d2f34]


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.166Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1707172792727884341).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.167Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.166Z
    2021-03-15T21:45:17.167Z


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.169Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=DDDA016BAF6B2F734FB655022CAAACEAA1355663331477BDB518BA3DD3A856D4}), maySkipCheckpoint=false, fiber=F88A34121EFB48C41C2E780A120ABC8CC09056736BE0178CDAEE11751A1096B9, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB)), trace=Trace(invocationId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Invocation, sessionId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1707172792727884341)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2225082697895848056), deduplicationSeed=R-1707172792727884341--810898131451030961)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=DDDA016BAF6B2F734FB655022CAAACEAA1355663331477BDB518BA3DD3A856D4}), frozenFiber=F88A34121EFB48C41C2E780A120ABC8CC09056736BE0178CDAEE11751A1096B9), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3b720a16, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@388d2f34])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3b720a16, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@388d2f34])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=DDDA016BAF6B2F734FB655022CAAACEAA1355663331477BDB518BA3DD3A856D4})
checkpoint.flowState.frozenFiber.hash: 
    EC4E83B7035AFEC9C5B0ED6CF48BA263E7517090CEDB047DB55721283C830420
    F88A34121EFB48C41C2E780A120ABC8CC09056736BE0178CDAEE11751A1096B9
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.timestamp: 
    2021-03-15T21:45:17.167Z
    2021-03-15T21:45:17.168Z
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3b720a16, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@388d2f34]
    []
isFlowResumed: 
    true
    false


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.170Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-2225082697895848056), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1707172792727884341--810898131451030961-2-0), senderUUID=fbc9ff9e-7c0e-47b8-8c64-93a240f8b83d))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.172Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))]), maySkipCheckpoint=false, fiber=C0A7B63B1608B92D6F5B5FCA5CE5F75DEBE85579BDD9C7E2A46349C80BEECEAC, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB)), trace=Trace(invocationId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Invocation, sessionId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1707172792727884341)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2225082697895848056), deduplicationSeed=R-1707172792727884341--810898131451030961)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))]), frozenFiber=C0A7B63B1608B92D6F5B5FCA5CE5F75DEBE85579BDD9C7E2A46349C80BEECEAC), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))=DDDA016BAF6B2F734FB655022CAAACEAA1355663331477BDB518BA3DD3A856D4})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))])
checkpoint.flowState.frozenFiber.hash: 
    F88A34121EFB48C41C2E780A120ABC8CC09056736BE0178CDAEE11751A1096B9
    C0A7B63B1608B92D6F5B5FCA5CE5F75DEBE85579BDD9C7E2A46349C80BEECEAC
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.timestamp: 
    2021-03-15T21:45:17.169Z
    2021-03-15T21:45:17.171Z
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.172Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.264Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1707172792727884341), payload=ErrorSessionMessage(flowException=null, errorId=-4652315064329695472)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@618c5e02, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1707172792727884341).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=-4652315064329695472)]
checkpoint.timestamp: 
    2021-03-15T21:45:17.172Z
    2021-03-15T21:45:17.264Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@618c5e02]


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.265Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1707172792727884341).otherSideErrored: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=1707172792727884341).receivedMessages: 
    [ErrorSessionMessage(flowException=null, errorId=-4652315064329695472)]
    []
checkpoint.timestamp: 
    2021-03-15T21:45:17.264Z
    2021-03-15T21:45:17.265Z
isFlowResumed: 
    false
    true


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.265Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.265Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=8), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false)]


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.266Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-4652315064329695472, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.266Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.266Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-03-15T21:45:17.265Z
    2021-03-15T21:45:17.266Z


 --- Transition of flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] ---
  Timestamp: 2021-03-15T21:45:17.290Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-4652315064329695472)], sessions=[], senderUUID=fbc9ff9e-7c0e-47b8-8c64-93a240f8b83d)
    CreateTransaction
    RemoveCheckpoint(id=[1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@618c5e02])
    ReleaseSoftLocks(uuid=1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@618c5e02])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=1707172792727884341)])
    RemoveFlow(flowId=[1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-4652315064329695472, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB)), trace=Trace(invocationId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Invocation, sessionId=28349a72-bb65-4b97-913d-df0f099a6275, timestamp: 2021-03-15T21:45:17.132Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 2, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 2, L=London, C=GB, sessions={SessionId(toLong=1707172792727884341)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-2225082697895848056), deduplicationSeed=R-1707172792727884341--810898131451030961)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, classToInitiateWith=class net.corda.samples.negotiation.flows.UpdateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows-0.2, corDappHash=61A8DA8F9B141ED26456AFAB014B52296B1FA5D02D08C4420686790E319322E0), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=5), flowState=net.corda.node.services.statemachine.FlowState$Finished@604d7531, errorState=Errored(errors=[FlowError(errorId=-4652315064329695472, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.negotiation.flows.UpdateFlow$Initiator@2ea3ed89, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=fbc9ff9e-7c0e-47b8-8c64-93a240f8b83d, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@1882adc5[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=1707172792727884341))]), frozenFiber=C0A7B63B1608B92D6F5B5FCA5CE5F75DEBE85579BDD9C7E2A46349C80BEECEAC)
    net.corda.node.services.statemachine.FlowState$Finished@604d7531
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.timestamp: 
    2021-03-15T21:45:17.266Z
    2021-03-15T21:45:17.272Z
checkpoint.status: 
    RUNNABLE
    FAILED
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@618c5e02]
    []
isRemoved: 
    false
    true

[WARN ] 22:45:17.296 [Mock network] DumpHistoryOnErrorInterceptor. - Flow [1ac506c6-eda5-4f8b-b0b5-4e9e12c38f30] error
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.6.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.6.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.6.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:414) ~[corda-core-4.6.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.6.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.6.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:414) ~[corda-core-4.6.jar:?]
	at net.corda.samples.negotiation.flows.UpdateFlow$Initiator.call(UpdateFlow.kt:52) ~[main/:?]
	at net.corda.samples.negotiation.flows.UpdateFlow$Initiator.call(UpdateFlow.kt:19) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_261]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
[INFO ] 22:45:17.307 [Test worker] CordaPersistence. - Closing HikariDataSource (HikariPool-1)
[INFO ] 22:45:17.307 [Test worker] HikariDataSource. - HikariPool-1 - Shutdown initiated...
[INFO ] 22:45:17.328 [Test worker] HikariDataSource. - HikariPool-1 - Shutdown completed.
[INFO ] 22:45:17.328 [Test worker] MockNodeMessagingService. - Status change to false
[INFO ] 22:45:17.328 [Test worker] InternalMockNetwork$MockNode. - MessagingService active change to: false
[INFO ] 22:45:17.331 [Test worker] CordaPersistence. - Closing HikariDataSource (HikariPool-2)
[INFO ] 22:45:17.331 [Test worker] HikariDataSource. - HikariPool-2 - Shutdown initiated...
[INFO ] 22:45:17.343 [Test worker] HikariDataSource. - HikariPool-2 - Shutdown completed.
[INFO ] 22:45:17.343 [Test worker] MockNodeMessagingService. - Status change to false
[INFO ] 22:45:17.343 [Test worker] InternalMockNetwork$MockNode. - MessagingService active change to: false
[INFO ] 22:45:17.344 [Test worker] CordaPersistence. - Closing HikariDataSource (HikariPool-3)
[INFO ] 22:45:17.344 [Test worker] HikariDataSource. - HikariPool-3 - Shutdown initiated...
[INFO ] 22:45:17.357 [Test worker] HikariDataSource. - HikariPool-3 - Shutdown completed.
[INFO ] 22:45:17.357 [Test worker] MockNodeMessagingService. - Status change to false
[INFO ] 22:45:17.357 [Test worker] InternalMockNetwork$MockNode. - MessagingService active change to: false
[INFO ] 22:45:17.358 [Test worker] CordaPersistence. - Closing HikariDataSource (HikariPool-4)
[INFO ] 22:45:17.358 [Test worker] HikariDataSource. - HikariPool-4 - Shutdown initiated...
[INFO ] 22:45:17.367 [Test worker] HikariDataSource. - HikariPool-4 - Shutdown completed.
[INFO ] 22:45:17.367 [Test worker] MockNodeMessagingService. - Status change to false
[INFO ] 22:45:17.367 [Test worker] InternalMockNetwork$MockNode. - MessagingService active change to: false
]]></system-out>
  <system-err><![CDATA[QUASAR WARNING: Assertions enabled. This may harm performance.
QUASAR WARNING: Fibers are set to verify instrumentation. This may *severely* harm performance.
]]></system-err>
</testsuite>
